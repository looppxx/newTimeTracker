2024-01-23 10:53:59.812 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:53:59.832 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:53:59.832 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:54:09.845 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:54:09.847 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:54:09.850 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:54:09.862 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:09.863 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:09.864 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:54:09.864 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:54:09.871 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:54:09.871 +08:00 [INF] Received HTTP response after 8.166ms - "OK"
2024-01-23 10:54:09.871 +08:00 [INF] Request finished in 7.0957ms 200 application/json
2024-01-23 10:54:09.871 +08:00 [INF] End processing HTTP request after 8.5379ms - "OK"
2024-01-23 10:54:09.878 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:09.890 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:54:09.894 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:09.906 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:54:09.916 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:09.917 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:09.935 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:54:09.935 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:54:19.936 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:54:19.937 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:54:19.939 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:54:19.957 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:19.957 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:19.959 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:54:19.960 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:54:19.969 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:54:19.969 +08:00 [INF] Received HTTP response after 12.1188ms - "OK"
2024-01-23 10:54:19.970 +08:00 [INF] Request finished in 10.622ms 200 application/json
2024-01-23 10:54:19.970 +08:00 [INF] End processing HTTP request after 12.8372ms - "OK"
2024-01-23 10:54:19.975 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:19.988 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:54:19.992 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:20.003 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:54:20.012 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:20.013 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:20.030 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:54:20.030 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:54:30.031 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:54:30.033 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:54:30.034 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:54:30.047 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:30.047 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:30.048 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:54:30.049 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:54:30.055 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:54:30.056 +08:00 [INF] Received HTTP response after 8.8058ms - "OK"
2024-01-23 10:54:30.056 +08:00 [INF] End processing HTTP request after 9.3177ms - "OK"
2024-01-23 10:54:30.056 +08:00 [INF] Request finished in 7.395ms 200 application/json
2024-01-23 10:54:30.059 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:30.072 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:54:30.075 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:30.088 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:54:30.096 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:30.096 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:30.115 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:54:30.115 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:54:40.120 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:54:40.121 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:54:40.123 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:54:40.141 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:40.141 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:40.143 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:54:40.143 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:54:40.150 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:54:40.150 +08:00 [INF] Request finished in 7.7846ms 200 application/json
2024-01-23 10:54:40.150 +08:00 [INF] Received HTTP response after 8.954ms - "OK"
2024-01-23 10:54:40.151 +08:00 [INF] End processing HTTP request after 9.3197ms - "OK"
2024-01-23 10:54:40.155 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:40.177 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:54:40.181 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:40.192 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:54:40.201 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:40.202 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:40.221 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:54:40.221 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:54:50.235 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:54:50.236 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:54:50.238 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:54:50.255 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:50.255 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:54:50.256 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:54:50.257 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:54:50.262 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:54:50.263 +08:00 [INF] Request finished in 6.5105ms 200 application/json
2024-01-23 10:54:50.263 +08:00 [INF] Received HTTP response after 8.0143ms - "OK"
2024-01-23 10:54:50.263 +08:00 [INF] End processing HTTP request after 8.325ms - "OK"
2024-01-23 10:54:50.267 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:50.280 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:54:50.283 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:54:50.294 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:54:50.302 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:50.303 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:54:50.326 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:54:50.326 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:00.336 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:00.337 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:00.339 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:00.357 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:00.357 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:00.358 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:00.359 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:00.366 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:00.366 +08:00 [INF] Request finished in 8.2727ms 200 application/json
2024-01-23 10:55:00.367 +08:00 [INF] Received HTTP response after 9.846ms - "OK"
2024-01-23 10:55:00.367 +08:00 [INF] End processing HTTP request after 10.1783ms - "OK"
2024-01-23 10:55:00.372 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:00.385 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:00.391 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:00.406 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:00.418 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:00.419 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:00.436 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:00.436 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:10.437 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:10.439 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:10.441 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:10.458 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:10.458 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:10.460 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:10.461 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:10.466 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:10.467 +08:00 [INF] Request finished in 6.7106ms 200 application/json
2024-01-23 10:55:10.467 +08:00 [INF] Received HTTP response after 8.5849ms - "OK"
2024-01-23 10:55:10.467 +08:00 [INF] End processing HTTP request after 9.0196ms - "OK"
2024-01-23 10:55:10.471 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:10.484 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:10.489 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:10.500 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:10.510 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:10.511 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:10.530 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:10.530 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:20.534 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:20.535 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:20.536 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:20.548 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:20.548 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:20.550 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:20.550 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:20.557 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:20.557 +08:00 [INF] Request finished in 7.4556ms 200 application/json
2024-01-23 10:55:20.557 +08:00 [INF] Received HTTP response after 8.5733ms - "OK"
2024-01-23 10:55:20.557 +08:00 [INF] End processing HTTP request after 8.9531ms - "OK"
2024-01-23 10:55:20.561 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:20.583 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:20.586 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:20.599 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:20.608 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:20.608 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:20.624 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:20.624 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:30.630 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:30.631 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:30.633 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:30.645 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:30.645 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:30.650 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:30.651 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:30.657 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:30.657 +08:00 [INF] Request finished in 6.8418ms 200 application/json
2024-01-23 10:55:30.657 +08:00 [INF] Received HTTP response after 11.9501ms - "OK"
2024-01-23 10:55:30.658 +08:00 [INF] End processing HTTP request after 12.4417ms - "OK"
2024-01-23 10:55:30.662 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:30.674 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:30.678 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:30.690 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:30.701 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:30.701 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:30.720 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:30.721 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:40.720 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:40.721 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:40.723 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:40.740 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:40.740 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:40.741 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:40.742 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:40.747 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:40.748 +08:00 [INF] Received HTTP response after 7.7338ms - "OK"
2024-01-23 10:55:40.748 +08:00 [INF] Request finished in 6.6194ms 200 application/json
2024-01-23 10:55:40.748 +08:00 [INF] End processing HTTP request after 8.0197ms - "OK"
2024-01-23 10:55:40.752 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:40.764 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:40.768 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:40.779 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:40.789 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:40.790 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:40.811 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:40.811 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:50.812 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:55:50.813 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:55:50.815 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:55:50.828 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:50.828 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:55:50.829 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:55:50.830 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:55:50.842 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:55:50.843 +08:00 [INF] Received HTTP response after 14.6848ms - "OK"
2024-01-23 10:55:50.843 +08:00 [INF] Request finished in 13.3418ms 200 application/json
2024-01-23 10:55:50.843 +08:00 [INF] End processing HTTP request after 15.0814ms - "OK"
2024-01-23 10:55:50.847 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:50.859 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:55:50.862 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:55:50.872 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:55:50.881 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:50.881 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:55:50.902 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:55:50.902 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:55:53.623 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/index.html?urls.primaryName=v1  
2024-01-23 10:55:53.647 +08:00 [INF] Request finished in 23.6439ms 200 text/html; charset=utf-8
2024-01-23 10:55:53.811 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v1/swagger.json  
2024-01-23 10:55:54.278 +08:00 [INF] Request finished in 467.2678ms 200 application/json; charset=utf-8
2024-01-23 10:56:00.915 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:56:00.916 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:56:00.917 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:56:00.934 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:56:00.934 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:56:00.935 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:56:00.935 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:56:00.940 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:56:00.941 +08:00 [INF] Request finished in 5.9364ms 200 application/json
2024-01-23 10:56:00.941 +08:00 [INF] Received HTTP response after 6.776ms - "OK"
2024-01-23 10:56:00.941 +08:00 [INF] End processing HTTP request after 7.0305ms - "OK"
2024-01-23 10:56:00.947 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:56:00.959 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:56:00.962 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:56:00.973 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:56:00.984 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:56:00.984 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:56:01.007 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:56:01.007 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:56:11.020 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 10:56:11.021 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 10:56:11.023 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 10:56:11.035 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 10:56:11.035 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 10:56:11.035 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 10:56:11.036 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 10:56:11.043 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 10:56:11.043 +08:00 [INF] Request finished in 8.0009ms 200 application/json
2024-01-23 10:56:11.044 +08:00 [INF] Received HTTP response after 8.8137ms - "OK"
2024-01-23 10:56:11.044 +08:00 [INF] End processing HTTP request after 9.0528ms - "OK"
2024-01-23 10:56:11.047 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:56:11.059 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 10:56:11.063 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 10:56:11.076 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 10:56:11.085 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:56:11.085 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 10:56:11.109 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 10:56:11.109 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 10:56:11.851 +08:00 [INF] Application is shutting down...
2024-01-23 11:03:22.239 +08:00 [INF] Starting web host
2024-01-23 11:03:23.612 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-23 11:03:23.656 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:03:23.673 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:03:23.759 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:03:23.788 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:23.788 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:24.037 +08:00 [INF] Now listening on: https://localhost:5001
2024-01-23 11:03:24.037 +08:00 [INF] Now listening on: http://localhost:5000
2024-01-23 11:03:24.037 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-23 11:03:24.037 +08:00 [INF] Hosting environment: Development
2024-01-23 11:03:24.037 +08:00 [INF] Content root path: C:\Users\Admin\Downloads\newTimeTracker\src\TimeTracker
2024-01-23 11:03:24.494 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:03:24.548 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:03:24.574 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:03:24.577 +08:00 [INF] Request finished in 84.1401ms 200 application/json
2024-01-23 11:03:24.584 +08:00 [INF] Received HTTP response after 792.8062ms - "OK"
2024-01-23 11:03:24.584 +08:00 [INF] End processing HTTP request after 800.3843ms - "OK"
2024-01-23 11:03:24.748 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:24.764 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:03:24.771 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:24.782 +08:00 [DBG] Creating a new HealthReport history.
2024-01-23 11:03:24.833 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 29)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-23 11:03:24.839 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-23 11:03:24.860 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:03:24.861 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:03:34.867 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:03:34.907 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:03:34.910 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:03:34.933 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:34.933 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:34.939 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:03:34.940 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:03:34.946 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:03:34.946 +08:00 [INF] Received HTTP response after 13.0306ms - "OK"
2024-01-23 11:03:34.946 +08:00 [INF] Request finished in 7.4389ms 200 application/json
2024-01-23 11:03:34.946 +08:00 [INF] End processing HTTP request after 13.479ms - "OK"
2024-01-23 11:03:34.950 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:34.970 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:03:34.974 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:34.986 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:03:34.999 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:35.001 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:35.019 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:03:35.020 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:03:42.666 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/  
2024-01-23 11:03:42.669 +08:00 [INF] Request finished in 2.9786ms 404 
2024-01-23 11:03:45.020 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:03:45.025 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:03:45.027 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:03:45.045 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:45.046 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:45.047 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:03:45.047 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:03:45.053 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:03:45.053 +08:00 [INF] Request finished in 6.518ms 200 application/json
2024-01-23 11:03:45.053 +08:00 [INF] Received HTTP response after 7.696ms - "OK"
2024-01-23 11:03:45.053 +08:00 [INF] End processing HTTP request after 8.268ms - "OK"
2024-01-23 11:03:45.059 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:45.070 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:03:45.075 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:45.086 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:03:45.098 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:45.098 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:45.119 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:03:45.119 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:03:46.330 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/  
2024-01-23 11:03:46.332 +08:00 [INF] Request finished in 2.5885ms 404 
2024-01-23 11:03:55.138 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:03:55.141 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:03:55.143 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:03:55.160 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:55.161 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:03:55.162 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:03:55.163 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:03:55.169 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:03:55.169 +08:00 [INF] Request finished in 6.568ms 200 application/json
2024-01-23 11:03:55.169 +08:00 [INF] Received HTTP response after 8.379ms - "OK"
2024-01-23 11:03:55.169 +08:00 [INF] End processing HTTP request after 8.8809ms - "OK"
2024-01-23 11:03:55.175 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:55.188 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:03:55.192 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:03:55.204 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:03:55.213 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:55.214 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:03:55.237 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:03:55.237 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:03:55.794 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/index.html  
2024-01-23 11:03:55.830 +08:00 [INF] Request finished in 36.5648ms 200 text/html; charset=utf-8
2024-01-23 11:03:55.875 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui.css  
2024-01-23 11:03:55.895 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-bundle.js  
2024-01-23 11:03:55.902 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-01-23 11:03:55.902 +08:00 [INF] Request finished in 27.1319ms 200 text/css
2024-01-23 11:03:55.910 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-standalone-preset.js  
2024-01-23 11:03:55.916 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-01-23 11:03:55.916 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-01-23 11:03:55.916 +08:00 [INF] Request finished in 6.5494ms 200 application/javascript
2024-01-23 11:03:55.916 +08:00 [INF] Request finished in 21.4656ms 200 application/javascript
2024-01-23 11:03:56.100 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v2/swagger.json  
2024-01-23 11:03:56.125 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/favicon-32x32.png  
2024-01-23 11:03:56.125 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-01-23 11:03:56.126 +08:00 [INF] Request finished in 0.6467ms 200 image/png
2024-01-23 11:03:56.577 +08:00 [INF] Request finished in 476.2379ms 200 application/json; charset=utf-8
2024-01-23 11:04:02.735 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token  
2024-01-23 11:04:02.737 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:02.738 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:04:02.753 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:04:02.782 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:04:02.786 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 30.0605ms
2024-01-23 11:04:02.786 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:04:02.786 +08:00 [INF] Request finished in 51.9904ms 200 text/plain; charset=utf-8
2024-01-23 11:04:02.822 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/1  
2024-01-23 11:04:02.823 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:02.823 +08:00 [INF] Request finished in 0.8765ms 204 
2024-01-23 11:04:02.825 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/1  
2024-01-23 11:04:02.851 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:02.855 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:02.855 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:02.855 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:04:02.858 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:04:02.863 +08:00 [DBG] Getting a user with id 1
2024-01-23 11:04:02.899 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:02.909 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:04:02.914 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:04:02.918 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 59.5762ms
2024-01-23 11:04:02.918 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:04:02.919 +08:00 [INF] Request finished in 93.7878ms 200 application/json; charset=utf-8
2024-01-23 11:04:02.975 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:04:02.976 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:02.976 +08:00 [INF] Request finished in 0.4275ms 204 
2024-01-23 11:04:02.978 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:04:02.978 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:02.979 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:02.979 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:02.979 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:04:02.983 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:04:02.985 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:04:02.986 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:03.008 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:04:03.009 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:04:03.011 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 28.1905ms
2024-01-23 11:04:03.011 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:04:03.011 +08:00 [INF] Request finished in 33.4128ms 200 application/json; charset=utf-8
2024-01-23 11:04:05.238 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:05.239 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:05.241 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:05.259 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:05.259 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:05.260 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:05.260 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:05.266 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:05.267 +08:00 [INF] Request finished in 6.6029ms 200 application/json
2024-01-23 11:04:05.267 +08:00 [INF] Received HTTP response after 7.5796ms - "OK"
2024-01-23 11:04:05.267 +08:00 [INF] End processing HTTP request after 8.0726ms - "OK"
2024-01-23 11:04:05.271 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:05.284 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:05.288 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:05.301 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:05.312 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:05.312 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:05.333 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:05.333 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:04:15.338 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:15.340 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:15.341 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:15.359 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:15.360 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:15.360 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:15.361 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:15.368 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:15.368 +08:00 [INF] Received HTTP response after 8.8729ms - "OK"
2024-01-23 11:04:15.369 +08:00 [INF] Request finished in 8.1496ms 200 application/json
2024-01-23 11:04:15.369 +08:00 [INF] End processing HTTP request after 9.5697ms - "OK"
2024-01-23 11:04:15.374 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:15.386 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:15.391 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:15.403 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:15.412 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:15.413 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:15.436 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:15.436 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:04:25.451 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:25.453 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:25.455 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:25.473 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:25.473 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:25.474 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:25.475 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:25.480 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:25.480 +08:00 [INF] Request finished in 5.7753ms 200 application/json
2024-01-23 11:04:25.480 +08:00 [INF] Received HTTP response after 6.8292ms - "OK"
2024-01-23 11:04:25.480 +08:00 [INF] End processing HTTP request after 7.0731ms - "OK"
2024-01-23 11:04:25.485 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:25.498 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:25.501 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:25.513 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:25.521 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:25.522 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:25.542 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:25.542 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:04:28.399 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:04:28.399 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:28.400 +08:00 [INF] Request finished in 1.0877ms 204 
2024-01-23 11:04:28.403 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:04:28.405 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:28.406 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:28.406 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:28.406 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:04:28.411 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:04:28.414 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:04:28.414 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:28.423 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:04:28.436 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:04:28.438 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:04:28.440 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 29.5871ms
2024-01-23 11:04:28.441 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:04:28.441 +08:00 [INF] Request finished in 37.928ms 200 application/json; charset=utf-8
2024-01-23 11:04:31.115 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:04:31.116 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:31.116 +08:00 [INF] Request finished in 1.1707ms 204 
2024-01-23 11:04:31.119 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:04:31.120 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:31.121 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:31.121 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:31.122 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:04:31.128 +08:00 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:04:31.130 +08:00 [DBG] Getting a page 1 of clients with page size 5
2024-01-23 11:04:31.130 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:31.136 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:04:31.143 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2024-01-23 11:04:31.144 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:04:31.146 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 18.2498ms
2024-01-23 11:04:31.146 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:04:31.146 +08:00 [INF] Request finished in 27.0744ms 200 application/json; charset=utf-8
2024-01-23 11:04:32.686 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:04:32.687 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:32.687 +08:00 [INF] Request finished in 0.7893ms 204 
2024-01-23 11:04:32.691 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:04:32.691 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:32.692 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:32.692 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:32.692 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:04:32.696 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:04:32.698 +08:00 [DBG] Getting a page 1 of projects with page size 5
2024-01-23 11:04:32.698 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:32.710 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:04:32.727 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:04:32.728 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:04:32.730 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 33.9484ms
2024-01-23 11:04:32.730 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:04:32.730 +08:00 [INF] Request finished in 39.7387ms 200 application/json; charset=utf-8
2024-01-23 11:04:34.567 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:04:34.567 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:34.567 +08:00 [INF] Request finished in 0.6284ms 204 
2024-01-23 11:04:34.570 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:04:34.572 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:34.572 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:34.572 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:34.572 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:04:34.572 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:04:34.573 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:04:34.574 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:34.577 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:04:34.579 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:04:34.579 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 6.5047ms
2024-01-23 11:04:34.579 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:04:34.579 +08:00 [INF] Request finished in 9.2007ms 200 application/json; charset=utf-8
2024-01-23 11:04:35.552 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:35.553 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:35.555 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:35.574 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:35.574 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:35.575 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:35.575 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:35.581 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:35.581 +08:00 [INF] Request finished in 6.4587ms 200 application/json
2024-01-23 11:04:35.581 +08:00 [INF] Received HTTP response after 7.4726ms - "OK"
2024-01-23 11:04:35.581 +08:00 [INF] End processing HTTP request after 7.7908ms - "OK"
2024-01-23 11:04:35.585 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:35.598 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:35.601 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:35.612 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:35.622 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:35.623 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:35.643 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:35.643 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:04:36.310 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:04:36.310 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:36.311 +08:00 [INF] Request finished in 0.6795ms 204 
2024-01-23 11:04:36.313 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:04:36.314 +08:00 [INF] Successfully validated the token.
2024-01-23 11:04:36.315 +08:00 [INF] Authorization was successful.
2024-01-23 11:04:36.315 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:04:36.315 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:04:36.315 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:04:36.316 +08:00 [DBG] Getting a page 1 of projects with page size 2147483647
2024-01-23 11:04:36.317 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:36.321 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:04:36.325 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:04:36.326 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:04:36.327 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 11.4997ms
2024-01-23 11:04:36.327 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:04:36.327 +08:00 [INF] Request finished in 13.6877ms 200 application/json; charset=utf-8
2024-01-23 11:04:45.643 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:45.643 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:45.645 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:45.656 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:45.657 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:45.657 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:45.658 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:45.664 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:45.665 +08:00 [INF] Request finished in 7.171ms 200 application/json
2024-01-23 11:04:45.665 +08:00 [INF] Received HTTP response after 8.0036ms - "OK"
2024-01-23 11:04:45.665 +08:00 [INF] End processing HTTP request after 8.3494ms - "OK"
2024-01-23 11:04:45.668 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:45.680 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:45.684 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:45.696 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:45.705 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:45.706 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:45.725 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:45.725 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:04:55.747 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:04:55.748 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:04:55.749 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:04:55.766 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:55.766 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:04:55.767 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:04:55.767 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:04:55.773 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:04:55.773 +08:00 [INF] Request finished in 6.218ms 200 application/json
2024-01-23 11:04:55.773 +08:00 [INF] Received HTTP response after 7.0174ms - "OK"
2024-01-23 11:04:55.774 +08:00 [INF] End processing HTTP request after 7.3275ms - "OK"
2024-01-23 11:04:55.778 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:55.790 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:04:55.793 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:04:55.806 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:04:55.814 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:55.815 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:04:55.835 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:04:55.835 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:05.835 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:05.836 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:05.837 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:05.847 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries  
2024-01-23 11:05:05.847 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:05.848 +08:00 [INF] Request finished in 0.9143ms 204 
2024-01-23 11:05:05.850 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:05.850 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:05.851 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:05.851 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:05.851 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:05.852 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:05.853 +08:00 [INF] Authorization failed.
2024-01-23 11:05:05.854 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:05.854 +08:00 [INF] Request finished in 3.2626ms 403 
2024-01-23 11:05:05.858 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:05.859 +08:00 [INF] Request finished in 7.7903ms 200 application/json
2024-01-23 11:05:05.859 +08:00 [INF] Received HTTP response after 8.6557ms - "OK"
2024-01-23 11:05:05.859 +08:00 [INF] End processing HTTP request after 8.9679ms - "OK"
2024-01-23 11:05:05.862 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:05.874 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:05.878 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:05.891 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:05.899 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:05.900 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:05.924 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:05.924 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:07.952 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:07.953 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:07.953 +08:00 [INF] Authorization failed.
2024-01-23 11:05:07.953 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:07.953 +08:00 [INF] Request finished in 1.217ms 403 
2024-01-23 11:05:09.632 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:09.633 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:09.633 +08:00 [INF] Authorization failed.
2024-01-23 11:05:09.633 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:09.633 +08:00 [INF] Request finished in 1.1119ms 403 
2024-01-23 11:05:09.960 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:09.960 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:09.961 +08:00 [INF] Authorization failed.
2024-01-23 11:05:09.961 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:09.961 +08:00 [INF] Request finished in 1.0519ms 403 
2024-01-23 11:05:10.248 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:10.249 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:10.249 +08:00 [INF] Authorization failed.
2024-01-23 11:05:10.249 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:10.250 +08:00 [INF] Request finished in 1.6369ms 403 
2024-01-23 11:05:13.540 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries  
2024-01-23 11:05:13.540 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:13.541 +08:00 [INF] Request finished in 0.7184ms 204 
2024-01-23 11:05:13.543 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:13.543 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:13.543 +08:00 [INF] Authorization failed.
2024-01-23 11:05:13.544 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:13.544 +08:00 [INF] Request finished in 1.0182ms 403 
2024-01-23 11:05:14.024 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.025 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.025 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.025 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.025 +08:00 [INF] Request finished in 1.0963ms 403 
2024-01-23 11:05:14.216 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.217 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.217 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.217 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.217 +08:00 [INF] Request finished in 1.0876ms 403 
2024-01-23 11:05:14.376 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.377 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.377 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.377 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.377 +08:00 [INF] Request finished in 1.0163ms 403 
2024-01-23 11:05:14.545 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.545 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.546 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.546 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.546 +08:00 [INF] Request finished in 1.1661ms 403 
2024-01-23 11:05:14.720 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.721 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.722 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.722 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.722 +08:00 [INF] Request finished in 1.6885ms 403 
2024-01-23 11:05:14.920 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:14.921 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:14.921 +08:00 [INF] Authorization failed.
2024-01-23 11:05:14.921 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:14.921 +08:00 [INF] Request finished in 0.867ms 403 
2024-01-23 11:05:15.849 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:15.849 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:15.849 +08:00 [INF] Authorization failed.
2024-01-23 11:05:15.850 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:15.850 +08:00 [INF] Request finished in 0.9597ms 403 
2024-01-23 11:05:15.938 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:15.939 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:15.941 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:15.960 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:15.960 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:15.960 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:15.960 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:15.966 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:15.967 +08:00 [INF] Request finished in 6.2252ms 200 application/json
2024-01-23 11:05:15.967 +08:00 [INF] Received HTTP response after 6.8417ms - "OK"
2024-01-23 11:05:15.967 +08:00 [INF] End processing HTTP request after 7.0702ms - "OK"
2024-01-23 11:05:15.970 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:15.982 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:15.986 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:15.998 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:16.006 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:16.007 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:16.030 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:16.030 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:16.064 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:05:16.064 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:16.064 +08:00 [INF] Authorization failed.
2024-01-23 11:05:16.064 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:16.065 +08:00 [INF] Request finished in 0.8727ms 403 
2024-01-23 11:05:16.656 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:05:16.656 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:16.657 +08:00 [INF] Request finished in 0.553ms 204 
2024-01-23 11:05:16.660 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:05:16.660 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:16.661 +08:00 [INF] Authorization was successful.
2024-01-23 11:05:16.661 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:16.661 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:05:16.661 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:05:16.662 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:05:16.663 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:16.666 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:05:16.667 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:05:16.667 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.994ms
2024-01-23 11:05:16.667 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:05:16.667 +08:00 [INF] Request finished in 7.8411ms 200 application/json; charset=utf-8
2024-01-23 11:05:18.868 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:05:18.868 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:18.868 +08:00 [INF] Request finished in 0.396ms 204 
2024-01-23 11:05:18.871 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:05:18.872 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:18.872 +08:00 [INF] Authorization was successful.
2024-01-23 11:05:18.872 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:18.872 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:05:18.873 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:05:18.874 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:05:18.874 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:18.877 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:05:18.880 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:05:18.881 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:05:18.882 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 8.8995ms
2024-01-23 11:05:18.882 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:05:18.882 +08:00 [INF] Request finished in 10.7493ms 200 application/json; charset=utf-8
2024-01-23 11:05:26.035 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:26.036 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:26.037 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:26.054 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:26.054 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:26.059 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:26.059 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:26.064 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:26.064 +08:00 [INF] Request finished in 5.3816ms 200 application/json
2024-01-23 11:05:26.064 +08:00 [INF] Received HTTP response after 9.9071ms - "OK"
2024-01-23 11:05:26.064 +08:00 [INF] End processing HTTP request after 10.121ms - "OK"
2024-01-23 11:05:26.068 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:26.081 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:26.084 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:26.096 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:26.104 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:26.105 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:26.130 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:26.130 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:29.344 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users  
2024-01-23 11:05:29.344 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:05:29.344 +08:00 [INF] Request finished in 0.5288ms 204 
2024-01-23 11:05:29.346 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/users application/json; charset=utf-8 28
2024-01-23 11:05:29.347 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:29.347 +08:00 [INF] Authorization failed.
2024-01-23 11:05:29.347 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:29.347 +08:00 [INF] Request finished in 1.1481ms 403 
2024-01-23 11:05:31.133 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/users application/json; charset=utf-8 28
2024-01-23 11:05:31.133 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:31.133 +08:00 [INF] Authorization failed.
2024-01-23 11:05:31.133 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:31.133 +08:00 [INF] Request finished in 0.7378ms 403 
2024-01-23 11:05:31.709 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/users application/json; charset=utf-8 28
2024-01-23 11:05:31.710 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:31.710 +08:00 [INF] Authorization failed.
2024-01-23 11:05:31.710 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:31.710 +08:00 [INF] Request finished in 1.1893ms 403 
2024-01-23 11:05:32.215 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/users application/json; charset=utf-8 28
2024-01-23 11:05:32.215 +08:00 [INF] Successfully validated the token.
2024-01-23 11:05:32.215 +08:00 [INF] Authorization failed.
2024-01-23 11:05:32.215 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:05:32.216 +08:00 [INF] Request finished in 0.8288ms 403 
2024-01-23 11:05:36.146 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:36.147 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:36.148 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:36.166 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:36.166 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:36.167 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:36.167 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:36.172 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:36.172 +08:00 [INF] Request finished in 5.537ms 200 application/json
2024-01-23 11:05:36.173 +08:00 [INF] Received HTTP response after 6.2302ms - "OK"
2024-01-23 11:05:36.173 +08:00 [INF] End processing HTTP request after 6.4909ms - "OK"
2024-01-23 11:05:36.176 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:36.187 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:36.191 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:36.202 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:36.210 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:36.211 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:36.233 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:36.233 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:46.248 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:46.249 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:46.250 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:46.269 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:46.269 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:46.269 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:46.270 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:46.275 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:46.275 +08:00 [INF] Request finished in 5.2921ms 200 application/json
2024-01-23 11:05:46.275 +08:00 [INF] Received HTTP response after 5.987ms - "OK"
2024-01-23 11:05:46.275 +08:00 [INF] End processing HTTP request after 6.2479ms - "OK"
2024-01-23 11:05:46.278 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:46.290 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:46.293 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:46.307 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:46.315 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:46.315 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:46.339 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:46.339 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:05:54.983 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token?admin=true  
2024-01-23 11:05:54.984 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:05:54.984 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:05:54.987 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:05:54.988 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 2.9448ms
2024-01-23 11:05:54.988 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:05:54.988 +08:00 [INF] Request finished in 5.0287ms 200 text/plain; charset=utf-8
2024-01-23 11:05:55.066 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/favicon.ico  
2024-01-23 11:05:55.066 +08:00 [INF] Request finished in 0.4593ms 404 
2024-01-23 11:05:56.353 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:05:56.353 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:05:56.355 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:05:56.368 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:56.368 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:05:56.368 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:05:56.369 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:05:56.374 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:05:56.374 +08:00 [INF] Request finished in 5.6633ms 200 application/json
2024-01-23 11:05:56.374 +08:00 [INF] Received HTTP response after 6.3969ms - "OK"
2024-01-23 11:05:56.374 +08:00 [INF] End processing HTTP request after 6.6637ms - "OK"
2024-01-23 11:05:56.378 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:56.389 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:05:56.392 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:05:56.405 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:05:56.413 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:56.413 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:05:56.436 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:05:56.436 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:06.436 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:06.437 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:06.438 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:06.459 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:06.459 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:06.459 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:06.459 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:06.464 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:06.465 +08:00 [INF] Request finished in 5.2573ms 200 application/json
2024-01-23 11:06:06.465 +08:00 [INF] Received HTTP response after 5.8824ms - "OK"
2024-01-23 11:06:06.465 +08:00 [INF] End processing HTTP request after 6.2299ms - "OK"
2024-01-23 11:06:06.469 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:06.480 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:06.485 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:06.496 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:06.504 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:06.505 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:06.525 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:06.525 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:11.388 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token?admin=true  
2024-01-23 11:06:11.388 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:11.388 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:06:11.388 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:06:11.389 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:06:11.390 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 1.4055ms
2024-01-23 11:06:11.390 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:06:11.390 +08:00 [INF] Request finished in 2.2438ms 200 text/plain; charset=utf-8
2024-01-23 11:06:11.424 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/1  
2024-01-23 11:06:11.424 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:11.424 +08:00 [INF] Request finished in 0.4056ms 204 
2024-01-23 11:06:11.427 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/1  
2024-01-23 11:06:11.427 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:11.427 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:11.427 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:11.427 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:06:11.428 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:06:11.428 +08:00 [DBG] Getting a user with id 1
2024-01-23 11:06:11.428 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:11.431 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:06:11.432 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:06:11.433 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 5.0263ms
2024-01-23 11:06:11.433 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:06:11.433 +08:00 [INF] Request finished in 6.1502ms 200 application/json; charset=utf-8
2024-01-23 11:06:11.479 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:06:11.479 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:11.479 +08:00 [INF] Request finished in 0.4926ms 204 
2024-01-23 11:06:11.482 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:06:11.483 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:11.483 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:11.483 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:11.483 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:06:11.483 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:06:11.484 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:06:11.484 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:11.487 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:06:11.489 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:06:11.489 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.7376ms
2024-01-23 11:06:11.489 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:06:11.489 +08:00 [INF] Request finished in 7.09ms 200 application/json; charset=utf-8
2024-01-23 11:06:12.970 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:06:12.971 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:12.971 +08:00 [INF] Request finished in 0.6264ms 204 
2024-01-23 11:06:12.974 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:06:12.975 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:12.975 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:12.975 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:12.976 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:06:12.976 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:06:12.977 +08:00 [DBG] Getting a page 1 of projects with page size 2147483647
2024-01-23 11:06:12.978 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:12.983 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:06:12.986 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:06:12.987 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:06:12.988 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 12.1112ms
2024-01-23 11:06:12.988 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:06:12.988 +08:00 [INF] Request finished in 14.4732ms 200 application/json; charset=utf-8
2024-01-23 11:06:16.530 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:16.530 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:16.531 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:16.548 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:16.548 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:16.549 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:16.549 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:16.555 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:16.556 +08:00 [INF] Request finished in 6.3416ms 200 application/json
2024-01-23 11:06:16.556 +08:00 [INF] Received HTTP response after 7.3043ms - "OK"
2024-01-23 11:06:16.556 +08:00 [INF] End processing HTTP request after 7.5023ms - "OK"
2024-01-23 11:06:16.559 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:16.572 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:16.575 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:16.588 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:16.596 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:16.596 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:16.619 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:16.619 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:24.827 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries  
2024-01-23 11:06:24.827 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:24.827 +08:00 [INF] Request finished in 0.5279ms 204 
2024-01-23 11:06:24.830 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 105
2024-01-23 11:06:24.830 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:24.830 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:24.830 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:24.830 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker)'
2024-01-23 11:06:24.833 +08:00 [INF] Route matched with {action = "Create", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel]] Create(TimeTracker.Models.TimeEntryInputModel) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:06:24.880 +08:00 [DBG] Creating a new time entry for user 1, project 2 and date 23/01/2024 12:00:00 AM
2024-01-23 11:06:24.880 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:24.883 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:06:24.892 +08:00 [INF] Executing DbCommand [Parameters=[@__model_ProjectId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "Projects" AS "p"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("p"."Id" = @__model_ProjectId_0) AND @__model_ProjectId_0 IS NOT NULL
LIMIT 2
2024-01-23 11:06:24.908 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 18), @p1='?', @p2='?', @p3='?', @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TimeEntries" ("Description", "EntryDate", "HourRate", "Hours", "ProjectId", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "TimeEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-23 11:06:24.932 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel'.
2024-01-23 11:06:24.959 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker) in 125.5514ms
2024-01-23 11:06:24.959 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker)'
2024-01-23 11:06:24.959 +08:00 [INF] Request finished in 129.4983ms 201 application/json; charset=utf-8
2024-01-23 11:06:24.980 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:06:24.980 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:24.980 +08:00 [INF] Request finished in 0.4833ms 204 
2024-01-23 11:06:24.984 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:06:24.984 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:24.984 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:24.984 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:24.984 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:06:24.984 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:06:24.985 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:06:24.985 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:24.989 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:06:24.991 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:06:24.991 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 7.0158ms
2024-01-23 11:06:24.991 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:06:24.992 +08:00 [INF] Request finished in 8.0764ms 200 application/json; charset=utf-8
2024-01-23 11:06:26.635 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:26.636 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:26.638 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:26.656 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:26.656 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:26.656 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:26.657 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:26.662 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:26.662 +08:00 [INF] Request finished in 5.5471ms 200 application/json
2024-01-23 11:06:26.662 +08:00 [INF] Received HTTP response after 6.1963ms - "OK"
2024-01-23 11:06:26.662 +08:00 [INF] End processing HTTP request after 6.5295ms - "OK"
2024-01-23 11:06:26.665 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:26.678 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:26.681 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:26.693 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:26.701 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:26.701 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:26.719 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:26.719 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:35.158 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:06:35.158 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:35.159 +08:00 [INF] Request finished in 0.5455ms 204 
2024-01-23 11:06:35.162 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:06:35.162 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:35.162 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:35.162 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:35.162 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:06:35.163 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:06:35.163 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:06:35.163 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:35.166 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:06:35.169 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:06:35.170 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:06:35.171 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 7.9272ms
2024-01-23 11:06:35.171 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:06:35.171 +08:00 [INF] Request finished in 9.305ms 200 application/json; charset=utf-8
2024-01-23 11:06:36.721 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:36.721 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:36.723 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:36.740 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:36.740 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:36.740 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:36.741 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:36.746 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:36.747 +08:00 [INF] Request finished in 6.2604ms 200 application/json
2024-01-23 11:06:36.747 +08:00 [INF] Received HTTP response after 6.9821ms - "OK"
2024-01-23 11:06:36.747 +08:00 [INF] End processing HTTP request after 7.2276ms - "OK"
2024-01-23 11:06:36.750 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:36.761 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:36.765 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:36.777 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:36.785 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:36.785 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:36.807 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:36.807 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:46.816 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:46.817 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:46.818 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:46.834 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:46.834 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:46.835 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:46.835 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:46.840 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:46.840 +08:00 [INF] Request finished in 5.5504ms 200 application/json
2024-01-23 11:06:46.841 +08:00 [INF] Received HTTP response after 6.1681ms - "OK"
2024-01-23 11:06:46.841 +08:00 [INF] End processing HTTP request after 6.3438ms - "OK"
2024-01-23 11:06:46.845 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:46.857 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:46.860 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:46.871 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:46.881 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:46.882 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:46.901 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:46.901 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:50.686 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users  
2024-01-23 11:06:50.686 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:50.687 +08:00 [INF] Request finished in 0.3619ms 204 
2024-01-23 11:06:50.689 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/users application/json; charset=utf-8 29
2024-01-23 11:06:50.689 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:50.689 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:50.689 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:50.689 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.Create (TimeTracker)'
2024-01-23 11:06:50.692 +08:00 [INF] Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] Create(TimeTracker.Models.UserInputModel) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:06:50.701 +08:00 [DBG] Creating a new user with name Alan
2024-01-23 11:06:50.701 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:50.706 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?' (Size = 4)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Users" ("HourRate", "Name")
VALUES (@p0, @p1);
SELECT "Id"
FROM "Users"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-23 11:06:50.721 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:06:50.722 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.Create (TimeTracker) in 29.8314ms
2024-01-23 11:06:50.722 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.Create (TimeTracker)'
2024-01-23 11:06:50.723 +08:00 [INF] Request finished in 33.7961ms 201 application/json; charset=utf-8
2024-01-23 11:06:50.741 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:06:50.742 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:50.742 +08:00 [INF] Request finished in 0.4927ms 204 
2024-01-23 11:06:50.745 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:06:50.745 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:50.745 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:50.745 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:50.745 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:06:50.745 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:06:50.746 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:06:50.746 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:50.751 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:06:50.754 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:06:50.755 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:06:50.755 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 9.9865ms
2024-01-23 11:06:50.756 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:06:50.756 +08:00 [INF] Request finished in 10.9387ms 200 application/json; charset=utf-8
2024-01-23 11:06:56.906 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:06:56.907 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:56.908 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:06:56.924 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:56.924 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:06:56.924 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:06:56.925 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:06:56.929 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:06:56.929 +08:00 [INF] Request finished in 4.9793ms 200 application/json
2024-01-23 11:06:56.929 +08:00 [INF] Received HTTP response after 5.4473ms - "OK"
2024-01-23 11:06:56.930 +08:00 [INF] End processing HTTP request after 5.6294ms - "OK"
2024-01-23 11:06:56.932 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:56.943 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:06:56.946 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:06:56.956 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:06:56.965 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:56.965 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:06:56.982 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:06:56.982 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:06:58.418 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/2  
2024-01-23 11:06:58.418 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:58.419 +08:00 [INF] Request finished in 0.3614ms 204 
2024-01-23 11:06:58.422 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/2  
2024-01-23 11:06:58.422 +08:00 [INF] Successfully validated the token.
2024-01-23 11:06:58.422 +08:00 [INF] Authorization was successful.
2024-01-23 11:06:58.422 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:06:58.422 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:06:58.423 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:06:58.424 +08:00 [DBG] Getting a user with id 2
2024-01-23 11:06:58.424 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:06:58.428 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:06:58.429 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:06:58.429 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 5.9854ms
2024-01-23 11:06:58.429 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:06:58.429 +08:00 [INF] Request finished in 7.6246ms 200 application/json; charset=utf-8
2024-01-23 11:07:00.250 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/2  
2024-01-23 11:07:00.250 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:00.250 +08:00 [INF] Request finished in 0.2522ms 204 
2024-01-23 11:07:00.252 +08:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:5001/api/v2/users/2  
2024-01-23 11:07:00.252 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:00.252 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:00.252 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:00.253 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.Delete (TimeTracker)'
2024-01-23 11:07:00.256 +08:00 [INF] Route matched with {action = "Delete", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:07:00.258 +08:00 [DBG] Deleting user with id 2
2024-01-23 11:07:00.258 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:00.262 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:07:00.275 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?'], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "Users"
WHERE "Id" = @p0;
SELECT changes();
2024-01-23 11:07:00.293 +08:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2024-01-23 11:07:00.294 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.Delete (TimeTracker) in 37.3348ms
2024-01-23 11:07:00.294 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.Delete (TimeTracker)'
2024-01-23 11:07:00.294 +08:00 [INF] Request finished in 41.7137ms 200 
2024-01-23 11:07:00.309 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:07:00.309 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:00.309 +08:00 [INF] Request finished in 0.3105ms 204 
2024-01-23 11:07:00.312 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:07:00.312 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:00.312 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:00.312 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:00.312 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:07:00.313 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:07:00.313 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:07:00.313 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:00.317 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:07:00.320 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:07:00.321 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:07:00.321 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 8.586ms
2024-01-23 11:07:00.321 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:07:00.321 +08:00 [INF] Request finished in 9.6721ms 200 application/json; charset=utf-8
2024-01-23 11:07:02.621 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:07:02.622 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:02.622 +08:00 [INF] Request finished in 0.3755ms 204 
2024-01-23 11:07:02.625 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:07:02.625 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:02.625 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:02.625 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:02.625 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:07:02.625 +08:00 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:07:02.626 +08:00 [DBG] Getting a page 1 of clients with page size 5
2024-01-23 11:07:02.626 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:02.629 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:07:02.632 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2024-01-23 11:07:02.633 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:07:02.633 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 7.4311ms
2024-01-23 11:07:02.633 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:07:02.633 +08:00 [INF] Request finished in 8.3308ms 200 application/json; charset=utf-8
2024-01-23 11:07:04.550 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:07:04.551 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:04.551 +08:00 [INF] Request finished in 0.3478ms 204 
2024-01-23 11:07:04.554 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:07:04.554 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:04.554 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:04.554 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:04.554 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:07:04.554 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:07:04.555 +08:00 [DBG] Getting a page 1 of projects with page size 5
2024-01-23 11:07:04.555 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:04.558 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:07:04.562 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:07:04.562 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:07:04.563 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 8.1634ms
2024-01-23 11:07:04.563 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:07:04.563 +08:00 [INF] Request finished in 9.267ms 200 application/json; charset=utf-8
2024-01-23 11:07:06.995 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:06.996 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:06.997 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:07.013 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:07.013 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:07.013 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:07.013 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:07.018 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:07.018 +08:00 [INF] Request finished in 4.9319ms 200 application/json
2024-01-23 11:07:07.018 +08:00 [INF] Received HTTP response after 5.3777ms - "OK"
2024-01-23 11:07:07.018 +08:00 [INF] End processing HTTP request after 5.5888ms - "OK"
2024-01-23 11:07:07.021 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:07.031 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:07.034 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:07.044 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:07.053 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:07.053 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:07.069 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:07.069 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:07:11.062 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:07:11.064 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:11.064 +08:00 [INF] Request finished in 2.3215ms 204 
2024-01-23 11:07:11.067 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:07:11.067 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:11.067 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:11.067 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:11.067 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:07:11.067 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:07:11.068 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:07:11.068 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:11.072 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:07:11.073 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:07:11.073 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.9689ms
2024-01-23 11:07:11.073 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:07:11.074 +08:00 [INF] Request finished in 6.853ms 200 application/json; charset=utf-8
2024-01-23 11:07:17.077 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:17.078 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:17.079 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:17.095 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:17.095 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:17.096 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:17.096 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:17.101 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:17.101 +08:00 [INF] Request finished in 5.0797ms 200 application/json
2024-01-23 11:07:17.101 +08:00 [INF] Received HTTP response after 5.6456ms - "OK"
2024-01-23 11:07:17.101 +08:00 [INF] End processing HTTP request after 5.8301ms - "OK"
2024-01-23 11:07:17.104 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:17.114 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:17.117 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:17.127 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:17.134 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:17.135 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:17.151 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:17.151 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:07:18.223 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:07:18.224 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:18.224 +08:00 [INF] Request finished in 0.3104ms 204 
2024-01-23 11:07:18.226 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:07:18.227 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:18.235 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:18.235 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:18.235 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:07:18.235 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:07:18.235 +08:00 [DBG] Getting a page 1 of projects with page size 2147483647
2024-01-23 11:07:18.235 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:18.239 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:07:18.243 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:07:18.243 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:07:18.244 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 8.7317ms
2024-01-23 11:07:18.244 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:07:18.244 +08:00 [INF] Request finished in 17.7791ms 200 application/json; charset=utf-8
2024-01-23 11:07:18.262 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/5  
2024-01-23 11:07:18.262 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:18.262 +08:00 [INF] Request finished in 0.3278ms 204 
2024-01-23 11:07:18.264 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/5  
2024-01-23 11:07:18.264 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:18.264 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:18.264 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:18.264 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetById (TimeTracker)'
2024-01-23 11:07:18.267 +08:00 [INF] Route matched with {action = "GetById", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel]] GetById(Int64) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:07:18.268 +08:00 [DBG] Getting a time entry with id 5
2024-01-23 11:07:18.268 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:18.280 +08:00 [INF] Executing DbCommand [Parameters=[@__id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("t"."Id" = @__id_0) AND @__id_0 IS NOT NULL
LIMIT 2
2024-01-23 11:07:18.281 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel'.
2024-01-23 11:07:18.281 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetById (TimeTracker) in 14.2608ms
2024-01-23 11:07:18.281 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetById (TimeTracker)'
2024-01-23 11:07:18.281 +08:00 [INF] Request finished in 17.4637ms 200 application/json; charset=utf-8
2024-01-23 11:07:24.352 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/5  
2024-01-23 11:07:24.352 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:24.352 +08:00 [INF] Request finished in 0.4043ms 204 
2024-01-23 11:07:24.355 +08:00 [INF] Request starting HTTP/1.1 PUT https://localhost:5001/api/v2/time-entries/5 application/json; charset=utf-8 106
2024-01-23 11:07:24.356 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:24.356 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:24.356 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:24.356 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.Update (TimeTracker)'
2024-01-23 11:07:24.359 +08:00 [INF] Route matched with {action = "Update", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel]] Update(Int64, TimeTracker.Models.TimeEntryInputModel) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:07:24.361 +08:00 [DBG] Updating time entry with id 5
2024-01-23 11:07:24.361 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:24.364 +08:00 [INF] Executing DbCommand [Parameters=[@__id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("t"."Id" = @__id_0) AND @__id_0 IS NOT NULL
LIMIT 2
2024-01-23 11:07:24.370 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?', @p0='?' (Size = 18), @p1='?', @p2='?', @p3='?', @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "TimeEntries" SET "Description" = @p0, "EntryDate" = @p1, "HourRate" = @p2, "Hours" = @p3, "ProjectId" = @p4, "UserId" = @p5
WHERE "Id" = @p6;
SELECT changes();
2024-01-23 11:07:24.393 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel'.
2024-01-23 11:07:24.393 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.Update (TimeTracker) in 34.3025ms
2024-01-23 11:07:24.393 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.Update (TimeTracker)'
2024-01-23 11:07:24.393 +08:00 [INF] Request finished in 38.036ms 200 application/json; charset=utf-8
2024-01-23 11:07:24.415 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:07:24.415 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:24.415 +08:00 [INF] Request finished in 0.5003ms 204 
2024-01-23 11:07:24.418 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:07:24.419 +08:00 [INF] Successfully validated the token.
2024-01-23 11:07:24.419 +08:00 [INF] Authorization was successful.
2024-01-23 11:07:24.419 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:07:24.419 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:07:24.419 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:07:24.419 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:07:24.419 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:24.424 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:07:24.425 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:07:24.425 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.9772ms
2024-01-23 11:07:24.425 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:07:24.425 +08:00 [INF] Request finished in 6.9762ms 200 application/json; charset=utf-8
2024-01-23 11:07:27.156 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:27.157 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:27.158 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:27.175 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:27.175 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:27.179 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:27.180 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:27.184 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:27.184 +08:00 [INF] Request finished in 5.0937ms 200 application/json
2024-01-23 11:07:27.185 +08:00 [INF] Received HTTP response after 9.5748ms - "OK"
2024-01-23 11:07:27.185 +08:00 [INF] End processing HTTP request after 9.772ms - "OK"
2024-01-23 11:07:27.187 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:27.204 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:27.207 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:27.218 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:27.227 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:27.227 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:27.244 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:27.244 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:07:37.247 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:37.248 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:37.249 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:37.260 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:37.260 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:37.260 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:37.260 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:37.266 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:37.266 +08:00 [INF] Request finished in 5.559ms 200 application/json
2024-01-23 11:07:37.266 +08:00 [INF] Received HTTP response after 6.034ms - "OK"
2024-01-23 11:07:37.266 +08:00 [INF] End processing HTTP request after 6.2879ms - "OK"
2024-01-23 11:07:37.269 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:37.280 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:37.283 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:37.294 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:37.302 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:37.302 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:37.324 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:37.324 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:07:47.338 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:47.338 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:47.340 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:47.356 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:47.356 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:47.357 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:47.357 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:47.363 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:47.364 +08:00 [INF] Request finished in 6.5812ms 200 application/json
2024-01-23 11:07:47.364 +08:00 [INF] Received HTTP response after 7.3069ms - "OK"
2024-01-23 11:07:47.364 +08:00 [INF] End processing HTTP request after 7.5955ms - "OK"
2024-01-23 11:07:47.368 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:47.379 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:47.382 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:47.392 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:47.399 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:47.399 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:47.415 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:47.415 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:07:57.417 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:07:57.418 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:07:57.419 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:07:57.435 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:57.435 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:07:57.435 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:07:57.435 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:07:57.441 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:07:57.441 +08:00 [INF] Request finished in 6.1447ms 200 application/json
2024-01-23 11:07:57.441 +08:00 [INF] Received HTTP response after 6.7031ms - "OK"
2024-01-23 11:07:57.442 +08:00 [INF] End processing HTTP request after 6.932ms - "OK"
2024-01-23 11:07:57.445 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:57.456 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:07:57.459 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:07:57.470 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:07:57.477 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:57.478 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:07:57.498 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:07:57.498 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:07.513 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:07.513 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:07.514 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:07.532 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:07.532 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:07.532 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:07.532 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:07.537 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:07.538 +08:00 [INF] Request finished in 5.3291ms 200 application/json
2024-01-23 11:08:07.538 +08:00 [INF] Received HTTP response after 5.9478ms - "OK"
2024-01-23 11:08:07.538 +08:00 [INF] End processing HTTP request after 6.1941ms - "OK"
2024-01-23 11:08:07.541 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:07.551 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:07.554 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:07.565 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:07.572 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:07.573 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:07.593 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:07.593 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:17.594 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:17.594 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:17.595 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:17.611 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:17.611 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:17.611 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:17.611 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:17.616 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:17.616 +08:00 [INF] Request finished in 5.0808ms 200 application/json
2024-01-23 11:08:17.616 +08:00 [INF] Received HTTP response after 5.7065ms - "OK"
2024-01-23 11:08:17.616 +08:00 [INF] End processing HTTP request after 5.904ms - "OK"
2024-01-23 11:08:17.620 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:17.631 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:17.635 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:17.645 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:17.653 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:17.653 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:17.669 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:17.669 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:27.681 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:27.681 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:27.682 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:27.693 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:27.693 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:27.693 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:27.693 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:27.698 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:27.698 +08:00 [INF] Request finished in 5.0304ms 200 application/json
2024-01-23 11:08:27.698 +08:00 [INF] Received HTTP response after 5.4976ms - "OK"
2024-01-23 11:08:27.698 +08:00 [INF] End processing HTTP request after 5.7038ms - "OK"
2024-01-23 11:08:27.701 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:27.711 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:27.714 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:27.724 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:27.732 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:27.732 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:27.748 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:27.748 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:37.747 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:37.748 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:37.749 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:37.761 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:37.761 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:37.761 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:37.762 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:37.767 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:37.767 +08:00 [INF] Request finished in 5.8458ms 200 application/json
2024-01-23 11:08:37.767 +08:00 [INF] Received HTTP response after 6.1687ms - "OK"
2024-01-23 11:08:37.767 +08:00 [INF] End processing HTTP request after 6.4376ms - "OK"
2024-01-23 11:08:37.771 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:37.782 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:37.785 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:37.796 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:37.805 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:37.805 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:37.822 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:37.822 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:47.835 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:47.836 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:47.837 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:47.855 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:47.855 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:47.856 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:47.856 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:47.862 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:47.862 +08:00 [INF] Request finished in 6.1282ms 200 application/json
2024-01-23 11:08:47.862 +08:00 [INF] Received HTTP response after 6.5485ms - "OK"
2024-01-23 11:08:47.862 +08:00 [INF] End processing HTTP request after 6.7553ms - "OK"
2024-01-23 11:08:47.866 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:47.878 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:47.881 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:47.892 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:47.899 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:47.900 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:47.921 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:47.922 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:08:57.921 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:08:57.921 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:08:57.923 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:08:57.939 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:57.939 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:08:57.939 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:08:57.939 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:08:57.945 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:08:57.945 +08:00 [INF] Received HTTP response after 5.9824ms - "OK"
2024-01-23 11:08:57.945 +08:00 [INF] End processing HTTP request after 6.2071ms - "OK"
2024-01-23 11:08:57.945 +08:00 [INF] Request finished in 5.7068ms 200 application/json
2024-01-23 11:08:57.948 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:57.958 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:08:57.961 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:08:57.972 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:08:57.981 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:57.981 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:08:57.998 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:08:57.998 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:08.010 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:08.011 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:08.012 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:08.028 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:08.028 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:08.029 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:08.029 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:08.034 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:08.034 +08:00 [INF] Request finished in 5.6595ms 200 application/json
2024-01-23 11:09:08.034 +08:00 [INF] Received HTTP response after 5.9712ms - "OK"
2024-01-23 11:09:08.034 +08:00 [INF] End processing HTTP request after 6.2001ms - "OK"
2024-01-23 11:09:08.038 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:08.048 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:08.051 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:08.061 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:08.068 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:08.069 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:08.086 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:08.086 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:18.100 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:18.100 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:18.101 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:18.113 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:18.113 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:18.114 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:18.114 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:18.119 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:18.119 +08:00 [INF] Request finished in 5.1154ms 200 application/json
2024-01-23 11:09:18.119 +08:00 [INF] Received HTTP response after 5.5257ms - "OK"
2024-01-23 11:09:18.119 +08:00 [INF] End processing HTTP request after 5.7849ms - "OK"
2024-01-23 11:09:18.123 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:18.133 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:18.137 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:18.148 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:18.156 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:18.156 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:18.173 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:18.173 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:28.174 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:28.175 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:28.176 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:28.194 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:28.194 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:28.199 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:28.199 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:28.206 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:28.206 +08:00 [INF] Request finished in 7.1501ms 200 application/json
2024-01-23 11:09:28.206 +08:00 [INF] Received HTTP response after 11.7973ms - "OK"
2024-01-23 11:09:28.206 +08:00 [INF] End processing HTTP request after 12.1874ms - "OK"
2024-01-23 11:09:28.210 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:28.222 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:28.230 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:28.241 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:28.250 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:28.250 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:28.271 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:28.271 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:38.286 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:38.287 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:38.289 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:38.310 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:38.310 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:38.310 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:38.311 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:38.315 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:38.315 +08:00 [INF] Request finished in 4.6037ms 200 application/json
2024-01-23 11:09:38.315 +08:00 [INF] Received HTTP response after 4.9334ms - "OK"
2024-01-23 11:09:38.315 +08:00 [INF] End processing HTTP request after 5.1284ms - "OK"
2024-01-23 11:09:38.318 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:38.332 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:38.334 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:38.349 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:38.359 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:38.359 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:38.383 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:38.383 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:48.388 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:48.388 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:48.390 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:48.408 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:48.408 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:48.408 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:48.409 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:48.413 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:48.413 +08:00 [INF] Request finished in 4.721ms 200 application/json
2024-01-23 11:09:48.413 +08:00 [INF] Received HTTP response after 5.1861ms - "OK"
2024-01-23 11:09:48.413 +08:00 [INF] End processing HTTP request after 5.3976ms - "OK"
2024-01-23 11:09:48.416 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:48.428 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:48.431 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:48.442 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:48.449 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:48.449 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:48.471 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:48.471 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:09:58.475 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:09:58.475 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:09:58.477 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:09:58.493 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:58.493 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:09:58.494 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:09:58.494 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:09:58.498 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:09:58.498 +08:00 [INF] Request finished in 4.4431ms 200 application/json
2024-01-23 11:09:58.498 +08:00 [INF] Received HTTP response after 4.8037ms - "OK"
2024-01-23 11:09:58.498 +08:00 [INF] End processing HTTP request after 4.9845ms - "OK"
2024-01-23 11:09:58.501 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:58.512 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:09:58.515 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:09:58.526 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:09:58.533 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:58.533 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:09:58.553 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:09:58.553 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:08.568 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:08.568 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:08.570 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:08.580 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:08.580 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:08.580 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:08.581 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:08.586 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:08.586 +08:00 [INF] Request finished in 5.283ms 200 application/json
2024-01-23 11:10:08.586 +08:00 [INF] Received HTTP response after 5.5964ms - "OK"
2024-01-23 11:10:08.586 +08:00 [INF] End processing HTTP request after 5.8712ms - "OK"
2024-01-23 11:10:08.589 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:08.599 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:08.602 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:08.612 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:08.619 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:08.620 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:08.640 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:08.640 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:18.662 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:18.663 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:18.664 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:18.680 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:18.680 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:18.681 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:18.681 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:18.685 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:18.685 +08:00 [INF] Request finished in 4.5418ms 200 application/json
2024-01-23 11:10:18.685 +08:00 [INF] Received HTTP response after 4.9074ms - "OK"
2024-01-23 11:10:18.685 +08:00 [INF] End processing HTTP request after 5.0974ms - "OK"
2024-01-23 11:10:18.688 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:18.699 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:18.702 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:18.713 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:18.720 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:18.721 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:18.742 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:18.742 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:28.749 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:28.750 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:28.751 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:28.767 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:28.767 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:28.768 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:28.768 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:28.773 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:28.773 +08:00 [INF] Request finished in 5.0229ms 200 application/json
2024-01-23 11:10:28.773 +08:00 [INF] Received HTTP response after 5.5002ms - "OK"
2024-01-23 11:10:28.773 +08:00 [INF] End processing HTTP request after 5.6994ms - "OK"
2024-01-23 11:10:28.775 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:28.786 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:28.789 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:28.800 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:28.808 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:28.808 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:28.829 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:28.829 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:38.845 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:38.846 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:38.847 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:38.863 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:38.863 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:38.864 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:38.864 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:38.868 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:38.868 +08:00 [INF] Request finished in 4.8249ms 200 application/json
2024-01-23 11:10:38.868 +08:00 [INF] Received HTTP response after 5.2779ms - "OK"
2024-01-23 11:10:38.869 +08:00 [INF] End processing HTTP request after 5.4606ms - "OK"
2024-01-23 11:10:38.871 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:38.883 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:38.886 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:38.897 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:38.904 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:38.905 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:38.927 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:38.927 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:48.934 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:48.934 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:48.935 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:48.951 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:48.951 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:48.951 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:48.952 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:48.956 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:48.956 +08:00 [INF] Request finished in 4.6083ms 200 application/json
2024-01-23 11:10:48.956 +08:00 [INF] Received HTTP response after 4.9131ms - "OK"
2024-01-23 11:10:48.956 +08:00 [INF] End processing HTTP request after 5.0971ms - "OK"
2024-01-23 11:10:48.959 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:48.971 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:48.974 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:48.988 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:48.996 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:48.997 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:49.018 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:49.018 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:10:59.027 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:10:59.028 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:10:59.030 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:10:59.047 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:59.047 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:10:59.047 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:10:59.047 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:10:59.052 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:10:59.052 +08:00 [INF] Request finished in 4.603ms 200 application/json
2024-01-23 11:10:59.052 +08:00 [INF] Received HTTP response after 4.9781ms - "OK"
2024-01-23 11:10:59.052 +08:00 [INF] End processing HTTP request after 5.2033ms - "OK"
2024-01-23 11:10:59.054 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:59.066 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:10:59.069 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:10:59.080 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:10:59.087 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:59.088 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:10:59.109 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:10:59.109 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:09.126 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:09.127 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:09.128 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:09.146 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:09.146 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:09.146 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:09.146 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:09.151 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:09.151 +08:00 [INF] Request finished in 4.6063ms 200 application/json
2024-01-23 11:11:09.151 +08:00 [INF] Received HTTP response after 4.9164ms - "OK"
2024-01-23 11:11:09.151 +08:00 [INF] End processing HTTP request after 5.1091ms - "OK"
2024-01-23 11:11:09.155 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:09.166 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:09.170 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:09.180 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:09.188 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:09.188 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:09.206 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:09.206 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:19.222 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:19.222 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:19.223 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:19.240 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:19.240 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:19.241 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:19.241 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:19.245 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:19.245 +08:00 [INF] Request finished in 4.5193ms 200 application/json
2024-01-23 11:11:19.245 +08:00 [INF] Received HTTP response after 4.9124ms - "OK"
2024-01-23 11:11:19.245 +08:00 [INF] End processing HTTP request after 5.0964ms - "OK"
2024-01-23 11:11:19.248 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:19.259 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:19.261 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:19.273 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:19.281 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:19.281 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:19.301 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:19.302 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:27.175 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/index.html  
2024-01-23 11:11:27.175 +08:00 [INF] Request finished in 0.5546ms 200 text/html; charset=utf-8
2024-01-23 11:11:27.363 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v2/swagger.json  
2024-01-23 11:11:27.363 +08:00 [INF] Request finished in 0.7323ms 200 application/json; charset=utf-8
2024-01-23 11:11:29.301 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:29.302 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:29.303 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:29.319 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:29.320 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:29.325 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:29.325 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:29.330 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:29.330 +08:00 [INF] Request finished in 5.3325ms 200 application/json
2024-01-23 11:11:29.330 +08:00 [INF] Received HTTP response after 10.6506ms - "OK"
2024-01-23 11:11:29.330 +08:00 [INF] End processing HTTP request after 10.9505ms - "OK"
2024-01-23 11:11:29.333 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:29.345 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:29.348 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:29.360 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:29.368 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:29.369 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:29.397 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:29.397 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:36.016 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token?admin=true  
2024-01-23 11:11:36.016 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:11:36.016 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:11:36.017 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:11:36.017 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 0.6655ms
2024-01-23 11:11:36.017 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:11:36.017 +08:00 [INF] Request finished in 1.52ms 200 text/plain; charset=utf-8
2024-01-23 11:11:39.403 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:39.404 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:39.405 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:39.422 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:39.422 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:39.422 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:39.422 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:39.427 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:39.427 +08:00 [INF] Request finished in 4.6725ms 200 application/json
2024-01-23 11:11:39.427 +08:00 [INF] Received HTTP response after 4.9779ms - "OK"
2024-01-23 11:11:39.427 +08:00 [INF] End processing HTTP request after 5.1977ms - "OK"
2024-01-23 11:11:39.430 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:39.441 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:39.445 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:39.460 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:39.468 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:39.468 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:39.492 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:39.492 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:46.378 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients/1  
2024-01-23 11:11:46.379 +08:00 [INF] Authorization failed.
2024-01-23 11:11:46.382 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-01-23 11:11:46.382 +08:00 [INF] Request finished in 4.1047ms 401 
2024-01-23 11:11:49.500 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:49.500 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:49.502 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:49.534 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:49.535 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:49.535 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:49.535 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:49.541 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:49.541 +08:00 [INF] Request finished in 6.0915ms 200 application/json
2024-01-23 11:11:49.541 +08:00 [INF] Received HTTP response after 6.3909ms - "OK"
2024-01-23 11:11:49.541 +08:00 [INF] End processing HTTP request after 6.698ms - "OK"
2024-01-23 11:11:49.545 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:49.556 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:49.559 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:49.571 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:49.578 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:49.579 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:49.602 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:49.602 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:11:59.602 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:11:59.603 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:11:59.605 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:11:59.624 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:59.624 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:11:59.624 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:11:59.624 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:11:59.629 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:11:59.629 +08:00 [INF] Request finished in 4.9171ms 200 application/json
2024-01-23 11:11:59.629 +08:00 [INF] Received HTTP response after 5.2712ms - "OK"
2024-01-23 11:11:59.629 +08:00 [INF] End processing HTTP request after 5.4864ms - "OK"
2024-01-23 11:11:59.632 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:59.644 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:11:59.647 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:11:59.659 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:11:59.667 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:59.667 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:11:59.690 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:11:59.690 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:12:09.703 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:12:09.703 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:09.705 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:12:09.719 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:09.719 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:09.720 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:12:09.720 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:12:09.726 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:12:09.726 +08:00 [INF] Request finished in 5.7485ms 200 application/json
2024-01-23 11:12:09.726 +08:00 [INF] Received HTTP response after 6.3752ms - "OK"
2024-01-23 11:12:09.726 +08:00 [INF] End processing HTTP request after 6.6573ms - "OK"
2024-01-23 11:12:09.728 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:09.741 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:12:09.744 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:09.757 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:12:09.764 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:09.765 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:09.788 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:12:09.788 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:12:16.433 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token  
2024-01-23 11:12:16.433 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:16.433 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:12:16.433 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:12:16.434 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:12:16.435 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 0.9866ms
2024-01-23 11:12:16.435 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:12:16.435 +08:00 [INF] Request finished in 2.0188ms 200 text/plain; charset=utf-8
2024-01-23 11:12:16.447 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/2  
2024-01-23 11:12:16.447 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:16.447 +08:00 [INF] Request finished in 0.4419ms 204 
2024-01-23 11:12:16.449 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/2  
2024-01-23 11:12:16.450 +08:00 [INF] Successfully validated the token.
2024-01-23 11:12:16.450 +08:00 [INF] Authorization was successful.
2024-01-23 11:12:16.450 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:16.450 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:12:16.450 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:12:16.451 +08:00 [DBG] Getting a user with id 2
2024-01-23 11:12:16.451 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:16.455 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:12:16.456 +08:00 [INF] Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
2024-01-23 11:12:16.457 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 6.4347ms
2024-01-23 11:12:16.457 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:12:16.457 +08:00 [INF] Request finished in 7.5583ms 404 application/problem+json; charset=utf-8
2024-01-23 11:12:19.795 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:12:19.795 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:19.796 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:12:19.814 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:19.814 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:19.815 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:12:19.815 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:12:19.819 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:12:19.819 +08:00 [INF] Request finished in 4.5987ms 200 application/json
2024-01-23 11:12:19.819 +08:00 [INF] Received HTTP response after 5.1634ms - "OK"
2024-01-23 11:12:19.819 +08:00 [INF] End processing HTTP request after 5.3628ms - "OK"
2024-01-23 11:12:19.822 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:19.834 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:12:19.837 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:19.849 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:12:19.856 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:19.856 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:19.880 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:12:19.880 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:12:29.892 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:12:29.892 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:29.893 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:12:29.905 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:29.905 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:29.905 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:12:29.905 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:12:29.910 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:12:29.910 +08:00 [INF] Request finished in 5.149ms 200 application/json
2024-01-23 11:12:29.910 +08:00 [INF] Received HTTP response after 5.4491ms - "OK"
2024-01-23 11:12:29.910 +08:00 [INF] End processing HTTP request after 5.6941ms - "OK"
2024-01-23 11:12:29.913 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:29.924 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:12:29.927 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:29.939 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:12:29.947 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:29.948 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:29.967 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:12:29.967 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:12:39.981 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:12:39.982 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:39.983 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:12:40.000 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:40.000 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:40.001 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:12:40.001 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:12:40.005 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:12:40.005 +08:00 [INF] Request finished in 4.5736ms 200 application/json
2024-01-23 11:12:40.005 +08:00 [INF] Received HTTP response after 4.9127ms - "OK"
2024-01-23 11:12:40.005 +08:00 [INF] End processing HTTP request after 5.0975ms - "OK"
2024-01-23 11:12:40.008 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:40.019 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:12:40.021 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:40.032 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:12:40.039 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:40.039 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:40.061 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:12:40.061 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:12:45.656 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token  
2024-01-23 11:12:45.656 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:45.657 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:12:45.657 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:12:45.657 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:12:45.657 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 0.5365ms
2024-01-23 11:12:45.657 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:12:45.657 +08:00 [INF] Request finished in 1.2741ms 200 text/plain; charset=utf-8
2024-01-23 11:12:45.691 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/1  
2024-01-23 11:12:45.691 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:45.691 +08:00 [INF] Request finished in 0.4372ms 204 
2024-01-23 11:12:45.694 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/1  
2024-01-23 11:12:45.695 +08:00 [INF] Successfully validated the token.
2024-01-23 11:12:45.695 +08:00 [INF] Authorization was successful.
2024-01-23 11:12:45.695 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:45.695 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:12:45.695 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:12:45.695 +08:00 [DBG] Getting a user with id 1
2024-01-23 11:12:45.695 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:45.698 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:12:45.699 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:12:45.699 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 4.4953ms
2024-01-23 11:12:45.699 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:12:45.700 +08:00 [INF] Request finished in 5.5126ms 200 application/json; charset=utf-8
2024-01-23 11:12:45.765 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:12:45.765 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:45.765 +08:00 [INF] Request finished in 0.3154ms 204 
2024-01-23 11:12:45.769 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:12:45.769 +08:00 [INF] Successfully validated the token.
2024-01-23 11:12:45.769 +08:00 [INF] Authorization was successful.
2024-01-23 11:12:45.769 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:12:45.769 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:12:45.769 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:12:45.770 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:12:45.770 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:45.773 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:12:45.775 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:12:45.775 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.5305ms
2024-01-23 11:12:45.775 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:12:45.775 +08:00 [INF] Request finished in 6.5721ms 200 application/json; charset=utf-8
2024-01-23 11:12:50.062 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:12:50.063 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:12:50.064 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:12:50.076 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:50.076 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:12:50.076 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:12:50.077 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:12:50.082 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:12:50.082 +08:00 [INF] Request finished in 6.0192ms 200 application/json
2024-01-23 11:12:50.082 +08:00 [INF] Received HTTP response after 6.2509ms - "OK"
2024-01-23 11:12:50.083 +08:00 [INF] End processing HTTP request after 6.5232ms - "OK"
2024-01-23 11:12:50.086 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:50.098 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:12:50.102 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:12:50.114 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:12:50.127 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:50.128 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:12:50.148 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:12:50.148 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:00.150 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:00.151 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:00.152 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:00.165 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:00.165 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:00.165 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:00.165 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:00.170 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:00.171 +08:00 [INF] Request finished in 5.4605ms 200 application/json
2024-01-23 11:13:00.171 +08:00 [INF] Received HTTP response after 5.7364ms - "OK"
2024-01-23 11:13:00.171 +08:00 [INF] End processing HTTP request after 5.9426ms - "OK"
2024-01-23 11:13:00.173 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:00.186 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:00.189 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:00.200 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:00.208 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:00.208 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:00.227 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:00.227 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:10.235 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:10.235 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:10.237 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:10.254 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:10.255 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:10.255 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:10.255 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:10.259 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:10.259 +08:00 [INF] Request finished in 4.421ms 200 application/json
2024-01-23 11:13:10.259 +08:00 [INF] Received HTTP response after 4.7558ms - "OK"
2024-01-23 11:13:10.259 +08:00 [INF] End processing HTTP request after 4.9318ms - "OK"
2024-01-23 11:13:10.262 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:10.273 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:10.276 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:10.288 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:10.295 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:10.295 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:10.319 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:10.319 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:20.320 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:20.320 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:20.321 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:20.339 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:20.339 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:20.339 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:20.339 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:20.343 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:20.343 +08:00 [INF] Request finished in 4.538ms 200 application/json
2024-01-23 11:13:20.344 +08:00 [INF] Received HTTP response after 4.8568ms - "OK"
2024-01-23 11:13:20.344 +08:00 [INF] End processing HTTP request after 5.1127ms - "OK"
2024-01-23 11:13:20.346 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:20.359 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:20.362 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:20.373 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:20.381 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:20.381 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:20.405 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:20.405 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:26.079 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:13:26.079 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:26.079 +08:00 [INF] Request finished in 0.4594ms 204 
2024-01-23 11:13:26.082 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:13:26.082 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:26.082 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:26.082 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:26.082 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:13:26.082 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:13:26.083 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:13:26.083 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:26.087 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:13:26.091 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:13:26.092 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:13:26.092 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 9.7408ms
2024-01-23 11:13:26.092 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:13:26.092 +08:00 [INF] Request finished in 10.6656ms 200 application/json; charset=utf-8
2024-01-23 11:13:30.414 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:30.415 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:30.416 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:30.428 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:30.428 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:30.432 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:30.433 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:30.437 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:30.438 +08:00 [INF] Request finished in 5.1706ms 200 application/json
2024-01-23 11:13:30.438 +08:00 [INF] Received HTTP response after 9.5822ms - "OK"
2024-01-23 11:13:30.438 +08:00 [INF] End processing HTTP request after 9.8124ms - "OK"
2024-01-23 11:13:30.440 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:30.453 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:30.456 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:30.468 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:30.475 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:30.476 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:30.495 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:30.495 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:39.324 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:13:39.324 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:39.324 +08:00 [INF] Request finished in 0.4782ms 204 
2024-01-23 11:13:39.328 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:13:39.328 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:39.328 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:39.328 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:39.328 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:39.329 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:13:39.329 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:13:39.329 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:39.332 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:13:39.333 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:13:39.333 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.3483ms
2024-01-23 11:13:39.333 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:39.333 +08:00 [INF] Request finished in 5.5032ms 200 application/json; charset=utf-8
2024-01-23 11:13:40.502 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:40.502 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:40.504 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:40.522 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:40.522 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:40.522 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:40.522 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:40.527 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:40.527 +08:00 [INF] Request finished in 4.6358ms 200 application/json
2024-01-23 11:13:40.527 +08:00 [INF] Received HTTP response after 4.9941ms - "OK"
2024-01-23 11:13:40.527 +08:00 [INF] End processing HTTP request after 5.1883ms - "OK"
2024-01-23 11:13:40.530 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:40.542 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:40.545 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:40.556 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:40.563 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:40.563 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:40.583 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:40.583 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:13:41.492 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:13:41.492 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:41.492 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:41.492 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:41.493 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:41.493 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:13:41.493 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:13:41.493 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:41.496 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:13:41.497 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:13:41.498 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.2163ms
2024-01-23 11:13:41.498 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:41.498 +08:00 [INF] Request finished in 6.096ms 200 application/json; charset=utf-8
2024-01-23 11:13:43.569 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2020/1  
2024-01-23 11:13:43.569 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:43.569 +08:00 [INF] Request finished in 0.4741ms 204 
2024-01-23 11:13:43.572 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2020/1  
2024-01-23 11:13:43.573 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:43.573 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:43.573 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:43.573 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:43.573 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:13:43.573 +08:00 [DBG] Getting all time entries for month 2020-1 for user with id 1
2024-01-23 11:13:43.573 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:43.576 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:13:43.577 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:13:43.577 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.0809ms
2024-01-23 11:13:43.577 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:43.577 +08:00 [INF] Request finished in 4.9017ms 200 application/json; charset=utf-8
2024-01-23 11:13:46.443 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2023/1  
2024-01-23 11:13:46.443 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:46.443 +08:00 [INF] Request finished in 0.2746ms 204 
2024-01-23 11:13:46.445 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2023/1  
2024-01-23 11:13:46.446 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:46.446 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:46.446 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:46.446 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:46.446 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:13:46.446 +08:00 [DBG] Getting all time entries for month 2023-1 for user with id 1
2024-01-23 11:13:46.446 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:46.450 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:13:46.451 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:13:46.451 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.4206ms
2024-01-23 11:13:46.452 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:46.452 +08:00 [INF] Request finished in 6.1867ms 200 application/json; charset=utf-8
2024-01-23 11:13:48.634 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:13:48.634 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:48.634 +08:00 [INF] Request finished in 0.5088ms 204 
2024-01-23 11:13:48.637 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:13:48.638 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:48.638 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:48.638 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:48.638 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:48.638 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:13:48.638 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:13:48.638 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:48.641 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:13:48.643 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:13:48.644 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 5.6242ms
2024-01-23 11:13:48.644 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:13:48.644 +08:00 [INF] Request finished in 6.7574ms 200 application/json; charset=utf-8
2024-01-23 11:13:49.317 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:13:49.318 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:49.318 +08:00 [INF] Request finished in 0.3461ms 204 
2024-01-23 11:13:49.321 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:13:49.321 +08:00 [INF] Successfully validated the token.
2024-01-23 11:13:49.321 +08:00 [INF] Authorization was successful.
2024-01-23 11:13:49.321 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:13:49.321 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:13:49.321 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:13:49.322 +08:00 [DBG] Getting a page 1 of projects with page size 2147483647
2024-01-23 11:13:49.322 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:49.326 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:13:49.331 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:13:49.331 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:13:49.332 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 10.058ms
2024-01-23 11:13:49.332 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:13:49.332 +08:00 [INF] Request finished in 11.1691ms 200 application/json; charset=utf-8
2024-01-23 11:13:50.601 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:13:50.602 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:13:50.603 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:13:50.621 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:50.621 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:13:50.621 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:13:50.621 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:13:50.626 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:13:50.626 +08:00 [INF] Request finished in 4.8561ms 200 application/json
2024-01-23 11:13:50.626 +08:00 [INF] Received HTTP response after 5.1709ms - "OK"
2024-01-23 11:13:50.626 +08:00 [INF] End processing HTTP request after 5.3831ms - "OK"
2024-01-23 11:13:50.629 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:50.643 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:13:50.646 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:13:50.658 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:13:50.666 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:50.667 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:13:50.689 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:13:50.689 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:00.698 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:00.699 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:00.700 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:00.712 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:00.712 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:00.712 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:00.712 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:00.717 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:00.717 +08:00 [INF] Request finished in 4.6959ms 200 application/json
2024-01-23 11:14:00.717 +08:00 [INF] Received HTTP response after 5.0281ms - "OK"
2024-01-23 11:14:00.717 +08:00 [INF] End processing HTTP request after 5.2102ms - "OK"
2024-01-23 11:14:00.720 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:00.731 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:00.734 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:00.745 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:00.753 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:00.753 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:00.775 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:00.775 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:10.775 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:10.776 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:10.777 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:10.793 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:10.793 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:10.793 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:10.793 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:10.798 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:10.798 +08:00 [INF] Request finished in 4.4948ms 200 application/json
2024-01-23 11:14:10.798 +08:00 [INF] Received HTTP response after 4.8464ms - "OK"
2024-01-23 11:14:10.798 +08:00 [INF] End processing HTTP request after 5.0232ms - "OK"
2024-01-23 11:14:10.800 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:10.812 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:10.815 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:10.826 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:10.834 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:10.834 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:10.857 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:10.857 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:16.345 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries  
2024-01-23 11:14:16.345 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:16.345 +08:00 [INF] Request finished in 0.3662ms 204 
2024-01-23 11:14:16.347 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 97
2024-01-23 11:14:16.347 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:16.347 +08:00 [INF] Authorization failed.
2024-01-23 11:14:16.348 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:14:16.348 +08:00 [INF] Request finished in 0.4951ms 403 
2024-01-23 11:14:18.701 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 97
2024-01-23 11:14:18.701 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:18.701 +08:00 [INF] Authorization failed.
2024-01-23 11:14:18.701 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:14:18.707 +08:00 [INF] Request finished in 0.6124ms 403 
2024-01-23 11:14:19.269 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 97
2024-01-23 11:14:19.269 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:19.269 +08:00 [INF] Authorization failed.
2024-01-23 11:14:19.269 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:14:19.270 +08:00 [INF] Request finished in 0.7063ms 403 
2024-01-23 11:14:19.435 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 97
2024-01-23 11:14:19.435 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:19.435 +08:00 [INF] Authorization failed.
2024-01-23 11:14:19.435 +08:00 [INF] AuthenticationScheme: Bearer was forbidden.
2024-01-23 11:14:19.435 +08:00 [INF] Request finished in 0.8033ms 403 
2024-01-23 11:14:20.869 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:20.869 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:20.871 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:20.883 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:20.883 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:20.883 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:20.883 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:20.889 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:20.889 +08:00 [INF] Request finished in 5.9254ms 200 application/json
2024-01-23 11:14:20.889 +08:00 [INF] Received HTTP response after 6.232ms - "OK"
2024-01-23 11:14:20.889 +08:00 [INF] End processing HTTP request after 6.4104ms - "OK"
2024-01-23 11:14:20.892 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:20.904 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:20.908 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:20.921 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:20.930 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:20.931 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:20.950 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:20.950 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:24.044 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/get-token?admin=true  
2024-01-23 11:14:24.044 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:24.044 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:14:24.044 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2024-01-23 11:14:24.045 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2024-01-23 11:14:24.045 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 0.6ms
2024-01-23 11:14:24.045 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2024-01-23 11:14:24.045 +08:00 [INF] Request finished in 1.3602ms 200 text/plain; charset=utf-8
2024-01-23 11:14:24.056 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users/1  
2024-01-23 11:14:24.056 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:24.056 +08:00 [INF] Request finished in 0.3957ms 204 
2024-01-23 11:14:24.058 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users/1  
2024-01-23 11:14:24.058 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:24.059 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:24.059 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:24.059 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:14:24.059 +08:00 [INF] Route matched with {action = "GetById", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.UserModel]] GetById(Int64) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:14:24.059 +08:00 [DBG] Getting a user with id 1
2024-01-23 11:14:24.059 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:24.062 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:14:24.063 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.UserModel'.
2024-01-23 11:14:24.063 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetById (TimeTracker) in 4.1383ms
2024-01-23 11:14:24.063 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetById (TimeTracker)'
2024-01-23 11:14:24.063 +08:00 [INF] Request finished in 4.8275ms 200 application/json; charset=utf-8
2024-01-23 11:14:24.096 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:14:24.096 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:24.096 +08:00 [INF] Request finished in 0.4376ms 204 
2024-01-23 11:14:24.099 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:14:24.099 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:24.100 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:24.100 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:24.100 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:24.100 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:14:24.100 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:14:24.100 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:24.103 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:14:24.105 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:14:24.105 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.9451ms
2024-01-23 11:14:24.105 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:24.105 +08:00 [INF] Request finished in 5.8042ms 200 application/json; charset=utf-8
2024-01-23 11:14:26.260 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:14:26.261 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:26.261 +08:00 [INF] Request finished in 0.3812ms 204 
2024-01-23 11:14:26.263 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=2147483647  
2024-01-23 11:14:26.264 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:26.264 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:26.264 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:26.264 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:14:26.264 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:14:26.265 +08:00 [DBG] Getting a page 1 of projects with page size 2147483647
2024-01-23 11:14:26.265 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:26.268 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:14:26.273 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:14:26.274 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:14:26.274 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 9.776ms
2024-01-23 11:14:26.274 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:14:26.274 +08:00 [INF] Request finished in 10.808ms 200 application/json; charset=utf-8
2024-01-23 11:14:30.954 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:30.954 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:30.955 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:30.972 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:30.972 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:30.972 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:30.972 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:30.977 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:30.977 +08:00 [INF] Request finished in 5.0758ms 200 application/json
2024-01-23 11:14:30.977 +08:00 [INF] Received HTTP response after 5.3839ms - "OK"
2024-01-23 11:14:30.977 +08:00 [INF] End processing HTTP request after 5.6005ms - "OK"
2024-01-23 11:14:30.980 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:30.991 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:30.994 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:31.005 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:31.012 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:31.013 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:31.032 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:31.032 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:40.486 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries  
2024-01-23 11:14:40.487 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:40.487 +08:00 [INF] Request finished in 0.3696ms 204 
2024-01-23 11:14:40.490 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json; charset=utf-8 97
2024-01-23 11:14:40.490 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:40.490 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:40.490 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:40.490 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker)'
2024-01-23 11:14:40.490 +08:00 [INF] Route matched with {action = "Create", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel]] Create(TimeTracker.Models.TimeEntryInputModel) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:14:40.491 +08:00 [DBG] Creating a new time entry for user 1, project 3 and date 01/01/2023 12:00:00 AM
2024-01-23 11:14:40.492 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:40.495 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
WHERE ("u"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:14:40.498 +08:00 [INF] Executing DbCommand [Parameters=[@__model_ProjectId_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "Projects" AS "p"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("p"."Id" = @__model_ProjectId_0) AND @__model_ProjectId_0 IS NOT NULL
LIMIT 2
2024-01-23 11:14:40.503 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 9), @p1='?', @p2='?', @p3='?', @p4='?', @p5='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "TimeEntries" ("Description", "EntryDate", "HourRate", "Hours", "ProjectId", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "TimeEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-23 11:14:40.525 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel'.
2024-01-23 11:14:40.525 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker) in 35.0337ms
2024-01-23 11:14:40.525 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.Create (TimeTracker)'
2024-01-23 11:14:40.526 +08:00 [INF] Request finished in 36.0587ms 201 application/json; charset=utf-8
2024-01-23 11:14:40.546 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:14:40.547 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:40.547 +08:00 [INF] Request finished in 0.4335ms 204 
2024-01-23 11:14:40.550 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:14:40.551 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:40.551 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:40.551 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:40.551 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:40.551 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:14:40.551 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:14:40.551 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:40.556 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:14:40.557 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:14:40.557 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 6.0911ms
2024-01-23 11:14:40.557 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:40.557 +08:00 [INF] Request finished in 7.2326ms 200 application/json; charset=utf-8
2024-01-23 11:14:41.042 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:41.042 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:41.044 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:41.060 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:41.060 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:41.060 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:41.061 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:41.066 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:41.066 +08:00 [INF] Request finished in 5.1751ms 200 application/json
2024-01-23 11:14:41.066 +08:00 [INF] Received HTTP response after 5.4483ms - "OK"
2024-01-23 11:14:41.066 +08:00 [INF] End processing HTTP request after 5.6449ms - "OK"
2024-01-23 11:14:41.068 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:41.080 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:41.083 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:41.095 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:41.103 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:41.104 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:41.123 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:41.123 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:45.970 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2023/1  
2024-01-23 11:14:45.970 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:45.971 +08:00 [INF] Request finished in 0.3742ms 204 
2024-01-23 11:14:45.973 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2023/1  
2024-01-23 11:14:45.974 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:45.974 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:45.974 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:45.974 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:45.974 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:14:45.974 +08:00 [DBG] Getting all time entries for month 2023-1 for user with id 1
2024-01-23 11:14:45.974 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:45.977 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:14:45.978 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:14:45.979 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.6787ms
2024-01-23 11:14:45.979 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:14:45.979 +08:00 [INF] Request finished in 5.5003ms 200 application/json; charset=utf-8
2024-01-23 11:14:51.136 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:14:51.137 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:51.138 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:14:51.155 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:51.155 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:14:51.156 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:14:51.156 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:14:51.161 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:14:51.162 +08:00 [INF] Received HTTP response after 6.4045ms - "OK"
2024-01-23 11:14:51.162 +08:00 [INF] End processing HTTP request after 6.61ms - "OK"
2024-01-23 11:14:51.162 +08:00 [INF] Request finished in 6.0787ms 200 application/json
2024-01-23 11:14:51.164 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:51.176 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:14:51.179 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:14:51.191 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:14:51.198 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:51.199 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:14:51.222 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:14:51.222 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:14:53.263 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:14:53.263 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:53.263 +08:00 [INF] Request finished in 0.4543ms 204 
2024-01-23 11:14:53.267 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/users?page=1&size=5  
2024-01-23 11:14:53.267 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:53.267 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:53.267 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:53.267 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:14:53.267 +08:00 [INF] Route matched with {action = "GetPage", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.UserModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.UsersController (TimeTracker).
2024-01-23 11:14:53.268 +08:00 [DBG] Getting a page 1 of users with page size 5
2024-01-23 11:14:53.268 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:53.272 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."HourRate", "u"."Name"
FROM "Users" AS "u"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:14:53.275 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Users" AS "u"
2024-01-23 11:14:53.276 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.UserModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:14:53.276 +08:00 [INF] Executed action TimeTracker.Controllers.UsersController.GetPage (TimeTracker) in 8.4779ms
2024-01-23 11:14:53.276 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.UsersController.GetPage (TimeTracker)'
2024-01-23 11:14:53.276 +08:00 [INF] Request finished in 9.4941ms 200 application/json; charset=utf-8
2024-01-23 11:14:56.299 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:14:56.299 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:56.299 +08:00 [INF] Request finished in 0.3667ms 204 
2024-01-23 11:14:56.302 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:14:56.302 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:56.302 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:56.302 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:56.302 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:14:56.303 +08:00 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:14:56.303 +08:00 [DBG] Getting a page 1 of clients with page size 5
2024-01-23 11:14:56.303 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:56.307 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:14:56.310 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2024-01-23 11:14:56.311 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:14:56.311 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 8.4815ms
2024-01-23 11:14:56.311 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:14:56.311 +08:00 [INF] Request finished in 9.5279ms 200 application/json; charset=utf-8
2024-01-23 11:14:58.290 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/clients/2  
2024-01-23 11:14:58.291 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:58.291 +08:00 [INF] Request finished in 0.321ms 204 
2024-01-23 11:14:58.293 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients/2  
2024-01-23 11:14:58.294 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:58.294 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:58.294 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:58.294 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetById (TimeTracker)'
2024-01-23 11:14:58.297 +08:00 [INF] Route matched with {action = "GetById", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.ClientModel]] GetById(Int64) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:14:58.298 +08:00 [DBG] Getting a client with id 2
2024-01-23 11:14:58.298 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:58.304 +08:00 [INF] Executing DbCommand [Parameters=[@__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
WHERE ("c"."Id" = @__p_0) AND @__p_0 IS NOT NULL
LIMIT 1
2024-01-23 11:14:58.305 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.ClientModel'.
2024-01-23 11:14:58.305 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetById (TimeTracker) in 8.3389ms
2024-01-23 11:14:58.305 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetById (TimeTracker)'
2024-01-23 11:14:58.305 +08:00 [INF] Request finished in 12.1798ms 200 application/json; charset=utf-8
2024-01-23 11:14:59.514 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients?page=1&size=5  
2024-01-23 11:14:59.515 +08:00 [INF] Successfully validated the token.
2024-01-23 11:14:59.515 +08:00 [INF] Authorization was successful.
2024-01-23 11:14:59.515 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:14:59.515 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:14:59.515 +08:00 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:14:59.515 +08:00 [DBG] Getting a page 1 of clients with page size 5
2024-01-23 11:14:59.516 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:14:59.518 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:14:59.523 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2024-01-23 11:14:59.524 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:14:59.524 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 9.3111ms
2024-01-23 11:14:59.525 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:14:59.525 +08:00 [INF] Request finished in 10.2272ms 200 application/json; charset=utf-8
2024-01-23 11:15:00.296 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:15:00.296 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:00.296 +08:00 [INF] Request finished in 0.3656ms 204 
2024-01-23 11:15:00.299 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:15:00.299 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:00.299 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:00.299 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:00.299 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:15:00.300 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:15:00.300 +08:00 [DBG] Getting a page 1 of projects with page size 5
2024-01-23 11:15:00.300 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:00.304 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:15:00.309 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:15:00.310 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:15:00.311 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 11.0102ms
2024-01-23 11:15:00.311 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:15:00.311 +08:00 [INF] Request finished in 12.1968ms 200 application/json; charset=utf-8
2024-01-23 11:15:01.241 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:01.242 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:01.243 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:01.254 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:01.254 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:01.254 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:01.254 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:01.259 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:01.259 +08:00 [INF] Request finished in 4.7432ms 200 application/json
2024-01-23 11:15:01.259 +08:00 [INF] Received HTTP response after 5.0946ms - "OK"
2024-01-23 11:15:01.259 +08:00 [INF] End processing HTTP request after 5.2856ms - "OK"
2024-01-23 11:15:01.262 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:01.275 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:01.278 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:01.289 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:01.297 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:01.297 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:01.320 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:01.320 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:15:03.074 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/clients?page=1&size=2147483647  
2024-01-23 11:15:03.075 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:03.075 +08:00 [INF] Request finished in 0.3986ms 204 
2024-01-23 11:15:03.078 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/clients?page=1&size=2147483647  
2024-01-23 11:15:03.078 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:03.078 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:03.078 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:03.078 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:15:03.078 +08:00 [INF] Route matched with {action = "GetPage", controller = "Clients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ClientModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ClientsController (TimeTracker).
2024-01-23 11:15:03.079 +08:00 [DBG] Getting a page 1 of clients with page size 2147483647
2024-01-23 11:15:03.079 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:03.081 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."Name"
FROM "Clients" AS "c"
ORDER BY (SELECT 1)
LIMIT @__p_1 OFFSET @__p_0
2024-01-23 11:15:03.084 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Clients" AS "c"
2024-01-23 11:15:03.085 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ClientModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:15:03.085 +08:00 [INF] Executed action TimeTracker.Controllers.ClientsController.GetPage (TimeTracker) in 7.0369ms
2024-01-23 11:15:03.085 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ClientsController.GetPage (TimeTracker)'
2024-01-23 11:15:03.086 +08:00 [INF] Request finished in 8.0769ms 200 application/json; charset=utf-8
2024-01-23 11:15:03.104 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/projects/3  
2024-01-23 11:15:03.104 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:03.104 +08:00 [INF] Request finished in 0.3983ms 204 
2024-01-23 11:15:03.106 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects/3  
2024-01-23 11:15:03.106 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:03.107 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:03.107 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:03.107 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetById (TimeTracker)'
2024-01-23 11:15:03.109 +08:00 [INF] Route matched with {action = "GetById", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.ProjectModel]] GetById(Int64) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:15:03.110 +08:00 [DBG] Getting a project with id 3
2024-01-23 11:15:03.110 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:03.116 +08:00 [INF] Executing DbCommand [Parameters=[@__id_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "Projects" AS "p"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ("p"."Id" = @__id_0) AND @__id_0 IS NOT NULL
LIMIT 2
2024-01-23 11:15:03.117 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.ProjectModel'.
2024-01-23 11:15:03.117 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetById (TimeTracker) in 8.3954ms
2024-01-23 11:15:03.117 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetById (TimeTracker)'
2024-01-23 11:15:03.118 +08:00 [INF] Request finished in 11.4343ms 200 application/json; charset=utf-8
2024-01-23 11:15:03.958 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/projects?page=1&size=5  
2024-01-23 11:15:03.959 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:03.959 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:03.959 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:03.959 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:15:03.959 +08:00 [INF] Route matched with {action = "GetPage", controller = "Projects"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.PagedList`1[TimeTracker.Models.ProjectModel]]] GetPage(Int32, Int32) on controller TimeTracker.Controllers.ProjectsController (TimeTracker).
2024-01-23 11:15:03.959 +08:00 [DBG] Getting a page 1 of projects with page size 5
2024-01-23 11:15:03.960 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:03.963 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?', @__p_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."ClientId", "t"."Name", "c"."Id", "c"."Name"
FROM (
    SELECT "p"."Id", "p"."ClientId", "p"."Name"
    FROM "Projects" AS "p"
    ORDER BY (SELECT 1)
    LIMIT @__p_1 OFFSET @__p_0
) AS "t"
INNER JOIN "Clients" AS "c" ON "t"."ClientId" = "c"."Id"
2024-01-23 11:15:03.967 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Projects" AS "p"
2024-01-23 11:15:03.968 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.PagedList`1[[TimeTracker.Models.ProjectModel, TimeTracker, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-01-23 11:15:03.968 +08:00 [INF] Executed action TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker) in 8.7329ms
2024-01-23 11:15:03.968 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.ProjectsController.GetPage (TimeTracker)'
2024-01-23 11:15:03.968 +08:00 [INF] Request finished in 9.7875ms 200 application/json; charset=utf-8
2024-01-23 11:15:04.874 +08:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:15:04.874 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:04.874 +08:00 [INF] Request finished in 0.3917ms 204 
2024-01-23 11:15:04.877 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:15:04.878 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:04.878 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:04.878 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:04.878 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:15:04.878 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:15:04.878 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:15:04.878 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:04.881 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:15:04.882 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:15:04.882 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.4337ms
2024-01-23 11:15:04.882 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:15:04.883 +08:00 [INF] Request finished in 5.49ms 200 application/json; charset=utf-8
2024-01-23 11:15:07.507 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/api/v2/time-entries/user/1/2024/1  
2024-01-23 11:15:07.507 +08:00 [INF] Successfully validated the token.
2024-01-23 11:15:07.508 +08:00 [INF] Authorization was successful.
2024-01-23 11:15:07.508 +08:00 [INF] CORS policy execution successful.
2024-01-23 11:15:07.508 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:15:07.508 +08:00 [INF] Route matched with {action = "GetByUserAndMonth", controller = "TimeEntries"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[TimeTracker.Models.TimeEntryModel[]]] GetByUserAndMonth(Int64, Int32, Int32) on controller TimeTracker.Controllers.TimeEntriesController (TimeTracker).
2024-01-23 11:15:07.508 +08:00 [DBG] Getting all time entries for month 2024-1 for user with id 1
2024-01-23 11:15:07.508 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'TimeTrackerDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:07.511 +08:00 [INF] Executing DbCommand [Parameters=[@__userId_0='?', @__startDate_1='?', @__endDate_2='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."Description", "t"."EntryDate", "t"."HourRate", "t"."Hours", "t"."ProjectId", "t"."UserId", "u"."Id", "u"."HourRate", "u"."Name", "p"."Id", "p"."ClientId", "p"."Name", "c"."Id", "c"."Name"
FROM "TimeEntries" AS "t"
INNER JOIN "Users" AS "u" ON "t"."UserId" = "u"."Id"
INNER JOIN "Projects" AS "p" ON "t"."ProjectId" = "p"."Id"
INNER JOIN "Clients" AS "c" ON "p"."ClientId" = "c"."Id"
WHERE ((("u"."Id" = @__userId_0) AND @__userId_0 IS NOT NULL) AND ("t"."EntryDate" >= @__startDate_1)) AND ("t"."EntryDate" < @__endDate_2)
ORDER BY "t"."EntryDate"
2024-01-23 11:15:07.512 +08:00 [INF] Executing ObjectResult, writing value of type 'TimeTracker.Models.TimeEntryModel[]'.
2024-01-23 11:15:07.512 +08:00 [INF] Executed action TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker) in 4.4371ms
2024-01-23 11:15:07.512 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.TimeEntriesController.GetByUserAndMonth (TimeTracker)'
2024-01-23 11:15:07.512 +08:00 [INF] Request finished in 5.3017ms 200 application/json; charset=utf-8
2024-01-23 11:15:11.322 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:11.322 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:11.323 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:11.364 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:11.364 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:11.364 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:11.364 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:11.370 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:11.370 +08:00 [INF] Received HTTP response after 6.0963ms - "OK"
2024-01-23 11:15:11.370 +08:00 [INF] Request finished in 5.8628ms 200 application/json
2024-01-23 11:15:11.370 +08:00 [INF] End processing HTTP request after 6.29ms - "OK"
2024-01-23 11:15:11.374 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:11.409 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:11.412 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:11.444 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:11.452 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:11.452 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:11.545 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:11.546 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:15:21.555 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:21.555 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:21.557 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:21.573 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:21.573 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:21.573 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:21.573 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:21.578 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:21.578 +08:00 [INF] Request finished in 4.5953ms 200 application/json
2024-01-23 11:15:21.578 +08:00 [INF] Received HTTP response after 4.8739ms - "OK"
2024-01-23 11:15:21.578 +08:00 [INF] End processing HTTP request after 5.0794ms - "OK"
2024-01-23 11:15:21.580 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:21.592 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:21.595 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:21.606 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:21.613 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:21.613 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:21.637 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:21.637 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:15:31.650 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:31.651 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:31.653 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:31.670 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:31.671 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:31.674 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:31.674 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:31.679 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:31.679 +08:00 [INF] Request finished in 4.8854ms 200 application/json
2024-01-23 11:15:31.679 +08:00 [INF] Received HTTP response after 8.495ms - "OK"
2024-01-23 11:15:31.679 +08:00 [INF] End processing HTTP request after 8.6931ms - "OK"
2024-01-23 11:15:31.682 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:31.696 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:31.699 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:31.712 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:31.720 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:31.720 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:31.748 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:31.748 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:15:41.759 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:41.759 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:41.760 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:41.777 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:41.777 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:41.778 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:41.778 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:41.782 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:41.782 +08:00 [INF] Request finished in 4.5342ms 200 application/json
2024-01-23 11:15:41.782 +08:00 [INF] Received HTTP response after 4.8392ms - "OK"
2024-01-23 11:15:41.782 +08:00 [INF] End processing HTTP request after 5.0246ms - "OK"
2024-01-23 11:15:41.785 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:41.797 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:41.800 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:41.811 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:41.818 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:41.818 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:41.842 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:41.842 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:15:51.858 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:15:51.858 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:15:51.860 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:15:51.872 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:51.872 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:15:51.872 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:15:51.872 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:15:51.877 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:15:51.877 +08:00 [INF] Request finished in 4.9325ms 200 application/json
2024-01-23 11:15:51.877 +08:00 [INF] Received HTTP response after 5.326ms - "OK"
2024-01-23 11:15:51.877 +08:00 [INF] End processing HTTP request after 5.545ms - "OK"
2024-01-23 11:15:51.880 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:51.892 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:15:51.895 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:15:51.907 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:15:51.914 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:51.914 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:15:51.933 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:15:51.933 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:01.934 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:01.935 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:01.936 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:01.952 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:01.952 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:01.952 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:01.952 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:01.957 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:01.957 +08:00 [INF] Request finished in 4.6086ms 200 application/json
2024-01-23 11:16:01.957 +08:00 [INF] Received HTTP response after 4.9964ms - "OK"
2024-01-23 11:16:01.957 +08:00 [INF] End processing HTTP request after 5.1889ms - "OK"
2024-01-23 11:16:01.959 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:01.971 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:01.974 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:01.985 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:01.992 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:01.993 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:02.014 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:02.014 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:12.028 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:12.028 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:12.029 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:12.045 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:12.045 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:12.046 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:12.046 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:12.050 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:12.050 +08:00 [INF] Request finished in 4.6505ms 200 application/json
2024-01-23 11:16:12.050 +08:00 [INF] Received HTTP response after 5.0992ms - "OK"
2024-01-23 11:16:12.051 +08:00 [INF] End processing HTTP request after 5.311ms - "OK"
2024-01-23 11:16:12.053 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:12.064 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:12.067 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:12.080 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:12.087 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:12.088 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:12.109 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:12.109 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:22.119 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:22.119 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:22.120 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:22.132 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:22.132 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:22.132 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:22.132 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:22.137 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:22.137 +08:00 [INF] Request finished in 5.4172ms 200 application/json
2024-01-23 11:16:22.137 +08:00 [INF] Received HTTP response after 5.769ms - "OK"
2024-01-23 11:16:22.137 +08:00 [INF] End processing HTTP request after 5.9833ms - "OK"
2024-01-23 11:16:22.140 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:22.151 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:22.154 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:22.164 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:22.171 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:22.172 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:22.189 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:22.189 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:32.216 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:32.216 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:32.218 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:32.235 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:32.235 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:32.235 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:32.236 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:32.240 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:32.240 +08:00 [INF] Request finished in 4.5371ms 200 application/json
2024-01-23 11:16:32.240 +08:00 [INF] Received HTTP response after 4.9045ms - "OK"
2024-01-23 11:16:32.240 +08:00 [INF] End processing HTTP request after 5.1044ms - "OK"
2024-01-23 11:16:32.243 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:32.253 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:32.256 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:32.267 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:32.274 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:32.274 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:32.293 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:32.293 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:42.308 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:42.309 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:42.310 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:42.327 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:42.327 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:42.327 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:42.327 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:42.332 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:42.332 +08:00 [INF] Request finished in 5.0542ms 200 application/json
2024-01-23 11:16:42.332 +08:00 [INF] Received HTTP response after 5.4862ms - "OK"
2024-01-23 11:16:42.332 +08:00 [INF] End processing HTTP request after 5.6903ms - "OK"
2024-01-23 11:16:42.335 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:42.346 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:42.349 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:42.360 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:42.367 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:42.367 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:42.386 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:42.386 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:16:52.412 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:16:52.413 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:16:52.414 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:16:52.431 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:52.431 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:16:52.431 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:16:52.431 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:16:52.435 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:16:52.436 +08:00 [INF] Request finished in 4.6468ms 200 application/json
2024-01-23 11:16:52.436 +08:00 [INF] Received HTTP response after 5.0018ms - "OK"
2024-01-23 11:16:52.436 +08:00 [INF] End processing HTTP request after 5.2002ms - "OK"
2024-01-23 11:16:52.438 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:52.449 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:16:52.452 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:16:52.463 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:16:52.470 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:52.470 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:16:52.493 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:16:52.493 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:02.501 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:02.501 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:02.502 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:02.520 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:02.520 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:02.520 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:02.520 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:02.525 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:02.525 +08:00 [INF] Request finished in 4.5663ms 200 application/json
2024-01-23 11:17:02.525 +08:00 [INF] Received HTTP response after 4.9227ms - "OK"
2024-01-23 11:17:02.525 +08:00 [INF] End processing HTTP request after 5.1225ms - "OK"
2024-01-23 11:17:02.527 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:02.539 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:02.542 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:02.553 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:02.559 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:02.560 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:02.582 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:02.582 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:12.591 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:12.591 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:12.592 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:12.604 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:12.604 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:12.604 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:12.604 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:12.609 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:12.609 +08:00 [INF] Request finished in 5.2202ms 200 application/json
2024-01-23 11:17:12.610 +08:00 [INF] Received HTTP response after 5.5895ms - "OK"
2024-01-23 11:17:12.610 +08:00 [INF] End processing HTTP request after 5.7919ms - "OK"
2024-01-23 11:17:12.612 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:12.623 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:12.626 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:12.637 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:12.645 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:12.645 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:12.665 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:12.665 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:22.670 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:22.671 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:22.672 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:22.689 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:22.689 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:22.689 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:22.689 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:22.694 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:22.694 +08:00 [INF] Request finished in 4.4748ms 200 application/json
2024-01-23 11:17:22.694 +08:00 [INF] Received HTTP response after 4.879ms - "OK"
2024-01-23 11:17:22.694 +08:00 [INF] End processing HTTP request after 5.117ms - "OK"
2024-01-23 11:17:22.696 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:22.708 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:22.711 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:22.722 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:22.729 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:22.729 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:22.747 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:22.747 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:32.764 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:32.765 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:32.766 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:32.783 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:32.783 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:32.787 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:32.787 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:32.792 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:32.792 +08:00 [INF] Request finished in 4.7308ms 200 application/json
2024-01-23 11:17:32.792 +08:00 [INF] Received HTTP response after 8.5636ms - "OK"
2024-01-23 11:17:32.792 +08:00 [INF] End processing HTTP request after 8.7624ms - "OK"
2024-01-23 11:17:32.795 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:32.807 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:32.810 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:32.820 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:32.828 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:32.828 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:32.848 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:32.848 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:42.857 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:42.858 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:42.859 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:42.876 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:42.876 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:42.876 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:42.876 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:42.880 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:42.880 +08:00 [INF] Request finished in 4.463ms 200 application/json
2024-01-23 11:17:42.880 +08:00 [INF] Received HTTP response after 4.7949ms - "OK"
2024-01-23 11:17:42.881 +08:00 [INF] End processing HTTP request after 4.965ms - "OK"
2024-01-23 11:17:42.883 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:42.896 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:42.899 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:42.908 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:42.915 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:42.915 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:42.933 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:42.933 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:17:52.947 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:17:52.947 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:17:52.949 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:17:52.966 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:52.966 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:17:52.967 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:17:52.967 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:17:52.971 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:17:52.971 +08:00 [INF] Request finished in 4.5619ms 200 application/json
2024-01-23 11:17:52.971 +08:00 [INF] Received HTTP response after 4.9667ms - "OK"
2024-01-23 11:17:52.971 +08:00 [INF] End processing HTTP request after 5.1452ms - "OK"
2024-01-23 11:17:52.974 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:52.985 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:17:52.988 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:17:53.000 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:17:53.007 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:53.007 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:17:53.028 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:17:53.029 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:03.034 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:03.035 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:03.036 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:03.048 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:03.048 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:03.048 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:03.048 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:03.053 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:03.053 +08:00 [INF] Request finished in 4.6622ms 200 application/json
2024-01-23 11:18:03.053 +08:00 [INF] Received HTTP response after 4.9804ms - "OK"
2024-01-23 11:18:03.053 +08:00 [INF] End processing HTTP request after 5.2912ms - "OK"
2024-01-23 11:18:03.056 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:03.067 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:03.071 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:03.084 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:03.092 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:03.092 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:03.113 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:03.113 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:13.124 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:13.124 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:13.126 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:13.142 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:13.142 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:13.143 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:13.143 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:13.147 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:13.147 +08:00 [INF] Request finished in 4.5088ms 200 application/json
2024-01-23 11:18:13.147 +08:00 [INF] Received HTTP response after 4.8438ms - "OK"
2024-01-23 11:18:13.147 +08:00 [INF] End processing HTTP request after 5.0662ms - "OK"
2024-01-23 11:18:13.150 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:13.160 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:13.163 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:13.174 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:13.181 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:13.181 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:13.205 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:13.205 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:23.214 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:23.214 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:23.215 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:23.232 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:23.232 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:23.233 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:23.233 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:23.237 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:23.238 +08:00 [INF] Request finished in 4.6722ms 200 application/json
2024-01-23 11:18:23.238 +08:00 [INF] Received HTTP response after 5.2952ms - "OK"
2024-01-23 11:18:23.238 +08:00 [INF] End processing HTTP request after 5.5069ms - "OK"
2024-01-23 11:18:23.240 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:23.253 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:23.256 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:23.266 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:23.274 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:23.274 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:23.297 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:23.297 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:33.318 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:33.319 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:33.320 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:33.337 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:33.337 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:33.337 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:33.337 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:33.341 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:33.342 +08:00 [INF] Request finished in 4.5325ms 200 application/json
2024-01-23 11:18:33.342 +08:00 [INF] Received HTTP response after 4.8633ms - "OK"
2024-01-23 11:18:33.342 +08:00 [INF] End processing HTTP request after 5.063ms - "OK"
2024-01-23 11:18:33.344 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:33.355 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:33.358 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:33.369 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:33.377 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:33.377 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:33.400 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:33.400 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:43.406 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:43.406 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:43.408 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:43.424 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:43.424 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:43.424 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:43.425 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:43.429 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:43.429 +08:00 [INF] Request finished in 4.5246ms 200 application/json
2024-01-23 11:18:43.429 +08:00 [INF] Received HTTP response after 4.9512ms - "OK"
2024-01-23 11:18:43.429 +08:00 [INF] End processing HTTP request after 5.1763ms - "OK"
2024-01-23 11:18:43.432 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:43.443 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:43.446 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:43.457 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:43.465 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:43.466 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:43.482 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:43.482 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:18:53.496 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:18:53.497 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:18:53.498 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:18:53.510 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:53.510 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:18:53.510 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:18:53.510 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:18:53.515 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:18:53.516 +08:00 [INF] Request finished in 5.5155ms 200 application/json
2024-01-23 11:18:53.516 +08:00 [INF] Received HTTP response after 5.8816ms - "OK"
2024-01-23 11:18:53.516 +08:00 [INF] End processing HTTP request after 6.0749ms - "OK"
2024-01-23 11:18:53.518 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:53.530 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:18:53.533 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:18:53.544 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:18:53.552 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:53.552 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:18:53.575 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:18:53.575 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:03.587 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:03.588 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:03.591 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:03.606 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:03.607 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:03.607 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:03.607 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:03.612 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:03.612 +08:00 [INF] Request finished in 4.7446ms 200 application/json
2024-01-23 11:19:03.612 +08:00 [INF] Received HTTP response after 5.2423ms - "OK"
2024-01-23 11:19:03.612 +08:00 [INF] End processing HTTP request after 5.4346ms - "OK"
2024-01-23 11:19:03.614 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:03.625 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:03.628 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:03.640 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:03.647 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:03.647 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:03.670 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:03.670 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:13.696 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:13.697 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:13.698 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:13.719 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:13.719 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:13.719 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:13.719 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:13.724 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:13.724 +08:00 [INF] Request finished in 4.8522ms 200 application/json
2024-01-23 11:19:13.724 +08:00 [INF] Received HTTP response after 5.1866ms - "OK"
2024-01-23 11:19:13.724 +08:00 [INF] End processing HTTP request after 5.4054ms - "OK"
2024-01-23 11:19:13.727 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:13.739 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:13.742 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:13.754 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:13.762 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:13.762 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:13.785 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:13.785 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:23.800 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:23.800 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:23.802 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:23.819 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:23.819 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:23.819 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:23.819 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:23.824 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:23.824 +08:00 [INF] Request finished in 4.4638ms 200 application/json
2024-01-23 11:19:23.824 +08:00 [INF] Received HTTP response after 4.8791ms - "OK"
2024-01-23 11:19:23.824 +08:00 [INF] End processing HTTP request after 5.0826ms - "OK"
2024-01-23 11:19:23.826 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:23.837 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:23.840 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:23.852 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:23.859 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:23.860 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:23.882 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:23.882 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:33.889 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:33.889 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:33.891 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:33.903 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:33.903 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:33.907 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:33.907 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:33.913 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:33.913 +08:00 [INF] Request finished in 6.4659ms 200 application/json
2024-01-23 11:19:33.913 +08:00 [INF] Received HTTP response after 10.2397ms - "OK"
2024-01-23 11:19:33.913 +08:00 [INF] End processing HTTP request after 10.4935ms - "OK"
2024-01-23 11:19:33.917 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:33.927 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:33.930 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:33.941 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:33.950 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:33.950 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:33.970 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:33.970 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:43.990 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:43.990 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:43.991 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:44.003 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:44.003 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:44.003 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:44.003 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:44.009 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:44.009 +08:00 [INF] Request finished in 5.7005ms 200 application/json
2024-01-23 11:19:44.009 +08:00 [INF] Received HTTP response after 5.9452ms - "OK"
2024-01-23 11:19:44.009 +08:00 [INF] End processing HTTP request after 6.2196ms - "OK"
2024-01-23 11:19:44.012 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:44.023 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:44.026 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:44.036 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:44.044 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:44.045 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:44.061 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:44.061 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:19:54.071 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:19:54.071 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:19:54.072 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:19:54.088 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:54.088 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:19:54.089 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:19:54.089 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:19:54.094 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:19:54.094 +08:00 [INF] Request finished in 5.3014ms 200 application/json
2024-01-23 11:19:54.094 +08:00 [INF] Received HTTP response after 5.6032ms - "OK"
2024-01-23 11:19:54.094 +08:00 [INF] End processing HTTP request after 5.7986ms - "OK"
2024-01-23 11:19:54.097 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:54.108 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:19:54.112 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:19:54.122 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:19:54.130 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:54.130 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:19:54.146 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:19:54.147 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:04.158 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:04.159 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:04.161 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:04.172 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:04.172 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:04.172 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:04.172 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:04.179 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:04.179 +08:00 [INF] Request finished in 6.7383ms 200 application/json
2024-01-23 11:20:04.179 +08:00 [INF] Received HTTP response after 7.0613ms - "OK"
2024-01-23 11:20:04.179 +08:00 [INF] End processing HTTP request after 7.2985ms - "OK"
2024-01-23 11:20:04.183 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:04.194 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:04.197 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:04.207 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:04.217 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:04.217 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:04.238 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:04.238 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:14.252 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:14.253 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:14.254 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:14.268 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:14.268 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:14.268 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:14.268 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:14.274 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:14.274 +08:00 [INF] Received HTTP response after 5.7928ms - "OK"
2024-01-23 11:20:14.274 +08:00 [INF] Request finished in 5.5497ms 200 application/json
2024-01-23 11:20:14.274 +08:00 [INF] End processing HTTP request after 6.0563ms - "OK"
2024-01-23 11:20:14.278 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:14.289 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:14.293 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:14.305 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:14.314 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:14.315 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:14.332 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:14.332 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:24.342 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:24.342 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:24.344 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:24.357 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:24.357 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:24.357 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:24.357 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:24.363 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:24.363 +08:00 [INF] Request finished in 5.4737ms 200 application/json
2024-01-23 11:20:24.363 +08:00 [INF] Received HTTP response after 5.854ms - "OK"
2024-01-23 11:20:24.363 +08:00 [INF] End processing HTTP request after 6.0961ms - "OK"
2024-01-23 11:20:24.366 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:24.377 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:24.380 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:24.391 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:24.399 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:24.399 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:24.416 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:24.416 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:34.429 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:34.430 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:34.431 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:34.443 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:34.443 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:34.444 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:34.444 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:34.449 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:34.449 +08:00 [INF] Request finished in 5.3922ms 200 application/json
2024-01-23 11:20:34.449 +08:00 [INF] Received HTTP response after 5.6464ms - "OK"
2024-01-23 11:20:34.449 +08:00 [INF] End processing HTTP request after 5.8608ms - "OK"
2024-01-23 11:20:34.452 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:34.464 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:34.467 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:34.479 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:34.487 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:34.487 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:34.503 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:34.503 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:44.520 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:44.520 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:44.521 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:44.533 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:44.533 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:44.533 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:44.533 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:44.538 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:44.538 +08:00 [INF] Request finished in 5.3402ms 200 application/json
2024-01-23 11:20:44.538 +08:00 [INF] Received HTTP response after 5.6073ms - "OK"
2024-01-23 11:20:44.539 +08:00 [INF] End processing HTTP request after 5.8317ms - "OK"
2024-01-23 11:20:44.542 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:44.553 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:44.556 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:44.567 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:44.575 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:44.575 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:44.591 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:44.591 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:20:54.608 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:20:54.608 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:20:54.610 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:20:54.626 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:54.626 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:20:54.626 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:20:54.626 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:20:54.631 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:20:54.631 +08:00 [INF] Request finished in 5.1026ms 200 application/json
2024-01-23 11:20:54.631 +08:00 [INF] Received HTTP response after 5.3606ms - "OK"
2024-01-23 11:20:54.632 +08:00 [INF] End processing HTTP request after 5.5716ms - "OK"
2024-01-23 11:20:54.635 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:54.646 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:20:54.649 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:20:54.659 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:20:54.667 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:54.668 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:20:54.684 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:20:54.684 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:04.689 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:04.690 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:04.691 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:04.703 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:04.703 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:04.703 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:04.703 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:04.709 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:04.709 +08:00 [INF] Request finished in 5.9688ms 200 application/json
2024-01-23 11:21:04.709 +08:00 [INF] Received HTTP response after 6.3504ms - "OK"
2024-01-23 11:21:04.709 +08:00 [INF] End processing HTTP request after 6.5874ms - "OK"
2024-01-23 11:21:04.713 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:04.726 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:04.729 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:04.741 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:04.749 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:04.749 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:04.765 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:04.765 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:14.777 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:14.777 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:14.779 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:14.794 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:14.794 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:14.794 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:14.795 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:14.799 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:14.799 +08:00 [INF] Request finished in 4.6978ms 200 application/json
2024-01-23 11:21:14.799 +08:00 [INF] Received HTTP response after 4.9377ms - "OK"
2024-01-23 11:21:14.799 +08:00 [INF] End processing HTTP request after 5.1689ms - "OK"
2024-01-23 11:21:14.802 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:14.813 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:14.816 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:14.826 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:14.834 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:14.835 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:14.851 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:14.851 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:24.859 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:24.860 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:24.861 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:24.871 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:24.871 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:24.872 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:24.872 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:24.876 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:24.876 +08:00 [INF] Request finished in 4.8444ms 200 application/json
2024-01-23 11:21:24.876 +08:00 [INF] Received HTTP response after 5.1136ms - "OK"
2024-01-23 11:21:24.877 +08:00 [INF] End processing HTTP request after 5.3055ms - "OK"
2024-01-23 11:21:24.879 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:24.890 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:24.893 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:24.904 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:24.912 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:24.913 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:24.929 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:24.929 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:34.936 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:34.936 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:34.937 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:34.953 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:34.953 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:34.957 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:34.957 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:34.964 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:34.964 +08:00 [INF] Request finished in 6.7558ms 200 application/json
2024-01-23 11:21:34.964 +08:00 [INF] Received HTTP response after 10.3297ms - "OK"
2024-01-23 11:21:34.964 +08:00 [INF] End processing HTTP request after 10.5536ms - "OK"
2024-01-23 11:21:34.967 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:34.978 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:34.981 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:34.992 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:35.000 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:35.001 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:35.018 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:35.018 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:45.033 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:45.033 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:45.034 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:45.050 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:45.050 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:45.050 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:45.050 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:45.055 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:45.055 +08:00 [INF] Request finished in 5.0152ms 200 application/json
2024-01-23 11:21:45.055 +08:00 [INF] Received HTTP response after 5.2667ms - "OK"
2024-01-23 11:21:45.055 +08:00 [INF] End processing HTTP request after 5.5356ms - "OK"
2024-01-23 11:21:45.058 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:45.068 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:45.072 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:45.082 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:45.090 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:45.090 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:45.107 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:45.107 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:21:55.125 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:21:55.125 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:21:55.127 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:21:55.138 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:55.138 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:21:55.138 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:21:55.138 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:21:55.143 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:21:55.143 +08:00 [INF] Request finished in 4.8836ms 200 application/json
2024-01-23 11:21:55.143 +08:00 [INF] Received HTTP response after 5.2489ms - "OK"
2024-01-23 11:21:55.143 +08:00 [INF] End processing HTTP request after 5.4328ms - "OK"
2024-01-23 11:21:55.146 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:55.157 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:21:55.160 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:21:55.171 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:21:55.179 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:55.179 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:21:55.196 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:21:55.196 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:05.200 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:05.200 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:05.201 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:05.237 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:05.237 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:05.237 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:05.237 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:05.243 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:05.243 +08:00 [INF] Request finished in 5.564ms 200 application/json
2024-01-23 11:22:05.243 +08:00 [INF] Received HTTP response after 5.8174ms - "OK"
2024-01-23 11:22:05.243 +08:00 [INF] End processing HTTP request after 6.0843ms - "OK"
2024-01-23 11:22:05.246 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:05.257 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:05.261 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:05.271 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:05.283 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:05.283 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:05.300 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:05.300 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:15.313 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:15.313 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:15.315 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:15.330 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:15.330 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:15.330 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:15.331 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:15.335 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:15.335 +08:00 [INF] Received HTTP response after 5.1521ms - "OK"
2024-01-23 11:22:15.335 +08:00 [INF] Request finished in 4.9628ms 200 application/json
2024-01-23 11:22:15.335 +08:00 [INF] End processing HTTP request after 5.3447ms - "OK"
2024-01-23 11:22:15.338 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:15.349 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:15.352 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:15.362 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:15.372 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:15.372 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:15.389 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:15.389 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:25.403 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:25.404 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:25.405 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:25.421 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:25.421 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:25.421 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:25.422 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:25.426 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:25.426 +08:00 [INF] Request finished in 4.7891ms 200 application/json
2024-01-23 11:22:25.426 +08:00 [INF] Received HTTP response after 5.0966ms - "OK"
2024-01-23 11:22:25.426 +08:00 [INF] End processing HTTP request after 5.2806ms - "OK"
2024-01-23 11:22:25.429 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:25.440 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:25.443 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:25.454 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:25.462 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:25.462 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:25.479 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:25.479 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:35.483 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:35.483 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:35.484 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:35.510 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:35.510 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:35.510 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:35.510 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:35.515 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:35.515 +08:00 [INF] Received HTTP response after 5.555ms - "OK"
2024-01-23 11:22:35.515 +08:00 [INF] Request finished in 5.3592ms 200 application/json
2024-01-23 11:22:35.515 +08:00 [INF] End processing HTTP request after 5.7537ms - "OK"
2024-01-23 11:22:35.518 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:35.530 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:35.533 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:35.551 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:35.559 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:35.560 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:35.579 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:35.579 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:45.590 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:45.590 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:45.591 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:45.602 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:45.603 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:45.603 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:45.603 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:45.607 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:45.607 +08:00 [INF] Request finished in 4.6877ms 200 application/json
2024-01-23 11:22:45.608 +08:00 [INF] Received HTTP response after 4.9665ms - "OK"
2024-01-23 11:22:45.608 +08:00 [INF] End processing HTTP request after 5.2127ms - "OK"
2024-01-23 11:22:45.611 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:45.621 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:45.625 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:45.636 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:45.644 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:45.645 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:45.663 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:45.663 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:22:55.677 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:22:55.677 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:22:55.678 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:22:55.694 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:55.695 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:22:55.695 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:22:55.695 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:22:55.700 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:22:55.700 +08:00 [INF] Request finished in 5.5205ms 200 application/json
2024-01-23 11:22:55.700 +08:00 [INF] Received HTTP response after 5.7591ms - "OK"
2024-01-23 11:22:55.700 +08:00 [INF] End processing HTTP request after 6.0306ms - "OK"
2024-01-23 11:22:55.703 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:55.714 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:22:55.717 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:22:55.728 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:22:55.736 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:55.737 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:22:55.755 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:22:55.755 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:05.756 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:05.757 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:05.758 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:05.769 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:05.770 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:05.770 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:05.770 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:05.776 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:05.776 +08:00 [INF] Received HTTP response after 6.0667ms - "OK"
2024-01-23 11:23:05.776 +08:00 [INF] Request finished in 5.8565ms 200 application/json
2024-01-23 11:23:05.776 +08:00 [INF] End processing HTTP request after 6.2621ms - "OK"
2024-01-23 11:23:05.779 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:05.789 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:05.792 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:05.803 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:05.811 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:05.811 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:05.830 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:05.830 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:15.839 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:15.839 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:15.840 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:15.856 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:15.856 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:15.856 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:15.856 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:15.861 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:15.861 +08:00 [INF] Received HTTP response after 5.4596ms - "OK"
2024-01-23 11:23:15.861 +08:00 [INF] Request finished in 5.2402ms 200 application/json
2024-01-23 11:23:15.861 +08:00 [INF] End processing HTTP request after 5.6824ms - "OK"
2024-01-23 11:23:15.864 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:15.875 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:15.878 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:15.892 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:15.899 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:15.900 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:15.917 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:15.917 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:25.934 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:25.935 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:25.936 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:25.952 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:25.952 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:25.952 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:25.953 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:25.957 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:25.957 +08:00 [INF] Request finished in 4.6937ms 200 application/json
2024-01-23 11:23:25.957 +08:00 [INF] Received HTTP response after 4.9697ms - "OK"
2024-01-23 11:23:25.957 +08:00 [INF] End processing HTTP request after 5.1685ms - "OK"
2024-01-23 11:23:25.960 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:25.972 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:25.975 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:25.985 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:25.992 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:25.993 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:26.012 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:26.012 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:36.019 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:36.019 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:36.021 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:36.036 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:36.036 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:36.040 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:36.040 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:36.045 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:36.045 +08:00 [INF] Request finished in 5.0301ms 200 application/json
2024-01-23 11:23:36.045 +08:00 [INF] Received HTTP response after 8.6957ms - "OK"
2024-01-23 11:23:36.045 +08:00 [INF] End processing HTTP request after 8.8877ms - "OK"
2024-01-23 11:23:36.048 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:36.059 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:36.063 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:36.076 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:36.083 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:36.083 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:36.102 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:36.102 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:46.111 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:46.112 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:46.113 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:46.129 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:46.129 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:46.130 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:46.130 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:46.134 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:46.134 +08:00 [INF] Request finished in 4.4565ms 200 application/json
2024-01-23 11:23:46.134 +08:00 [INF] Received HTTP response after 4.7444ms - "OK"
2024-01-23 11:23:46.134 +08:00 [INF] End processing HTTP request after 4.9158ms - "OK"
2024-01-23 11:23:46.137 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:46.148 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:46.150 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:46.161 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:46.169 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:46.169 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:46.194 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:46.194 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:23:56.200 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:23:56.200 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:23:56.202 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:23:56.219 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:56.220 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:23:56.221 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:23:56.221 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:23:56.225 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:23:56.225 +08:00 [INF] Request finished in 4.2246ms 200 application/json
2024-01-23 11:23:56.225 +08:00 [INF] Received HTTP response after 4.7991ms - "OK"
2024-01-23 11:23:56.225 +08:00 [INF] End processing HTTP request after 5.9143ms - "OK"
2024-01-23 11:23:56.228 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:56.240 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:23:56.244 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:23:56.256 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:23:56.264 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:56.264 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:23:56.287 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:23:56.287 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:06.290 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:06.290 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:06.291 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:06.308 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:06.308 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:06.309 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:06.309 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:06.312 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:06.312 +08:00 [INF] Request finished in 3.2168ms 200 application/json
2024-01-23 11:24:06.312 +08:00 [INF] Received HTTP response after 3.818ms - "OK"
2024-01-23 11:24:06.312 +08:00 [INF] End processing HTTP request after 4.1142ms - "OK"
2024-01-23 11:24:06.315 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:06.327 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:06.330 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:06.342 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:06.349 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:06.349 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:06.372 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:06.372 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:16.385 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:16.385 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:16.387 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:16.404 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:16.404 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:16.405 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:16.405 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:16.407 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:16.408 +08:00 [INF] Request finished in 3.0164ms 200 application/json
2024-01-23 11:24:16.408 +08:00 [INF] Received HTTP response after 3.3233ms - "OK"
2024-01-23 11:24:16.408 +08:00 [INF] End processing HTTP request after 3.501ms - "OK"
2024-01-23 11:24:16.410 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:16.423 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:16.427 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:16.438 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:16.446 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:16.446 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:16.469 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:16.469 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:26.468 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:26.469 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:26.471 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:26.489 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:26.489 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:26.490 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:26.490 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:26.492 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:26.492 +08:00 [INF] Request finished in 2.8714ms 200 application/json
2024-01-23 11:24:26.492 +08:00 [INF] Received HTTP response after 3.1703ms - "OK"
2024-01-23 11:24:26.493 +08:00 [INF] End processing HTTP request after 3.3356ms - "OK"
2024-01-23 11:24:26.495 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:26.506 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:26.509 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:26.522 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:26.530 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:26.530 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:26.556 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:26.556 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:36.566 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:36.567 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:36.568 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:36.585 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:36.585 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:36.586 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:36.586 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:36.588 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:36.589 +08:00 [INF] Request finished in 2.9189ms 200 application/json
2024-01-23 11:24:36.589 +08:00 [INF] Received HTTP response after 3.2157ms - "OK"
2024-01-23 11:24:36.589 +08:00 [INF] End processing HTTP request after 3.3881ms - "OK"
2024-01-23 11:24:36.591 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:36.603 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:36.606 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:36.617 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:36.624 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:36.624 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:36.648 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:36.648 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:46.654 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:46.655 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:46.657 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:46.673 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:46.673 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:46.673 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:46.673 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:46.677 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:46.677 +08:00 [INF] Request finished in 3.6833ms 200 application/json
2024-01-23 11:24:46.677 +08:00 [INF] Received HTTP response after 4.1473ms - "OK"
2024-01-23 11:24:46.677 +08:00 [INF] End processing HTTP request after 4.4368ms - "OK"
2024-01-23 11:24:46.680 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:46.709 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:46.727 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:46.740 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:46.748 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:46.749 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:46.768 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:46.768 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:24:56.775 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:24:56.776 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:24:56.777 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:24:56.794 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:56.794 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:24:56.794 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:24:56.795 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:24:56.797 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:24:56.797 +08:00 [INF] Request finished in 2.9104ms 200 application/json
2024-01-23 11:24:56.797 +08:00 [INF] Received HTTP response after 3.2812ms - "OK"
2024-01-23 11:24:56.798 +08:00 [INF] End processing HTTP request after 3.4456ms - "OK"
2024-01-23 11:24:56.800 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:56.811 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:24:56.814 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:24:56.826 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:24:56.833 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:56.833 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:24:56.854 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:24:56.854 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:06.868 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:06.868 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:06.870 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:06.889 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:06.889 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:06.890 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:06.890 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:06.893 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:06.893 +08:00 [INF] Request finished in 3.6622ms 200 application/json
2024-01-23 11:25:06.893 +08:00 [INF] Received HTTP response after 4.0756ms - "OK"
2024-01-23 11:25:06.894 +08:00 [INF] End processing HTTP request after 4.2542ms - "OK"
2024-01-23 11:25:06.896 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:06.909 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:06.912 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:06.923 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:06.931 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:06.931 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:06.954 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:06.954 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:16.963 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:16.964 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:16.965 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:16.983 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:16.983 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:16.984 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:16.984 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:16.989 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:16.989 +08:00 [INF] Request finished in 5.0917ms 200 application/json
2024-01-23 11:25:16.989 +08:00 [INF] Received HTTP response after 5.4062ms - "OK"
2024-01-23 11:25:16.989 +08:00 [INF] End processing HTTP request after 5.5825ms - "OK"
2024-01-23 11:25:16.992 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:17.003 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:17.006 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:17.017 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:17.025 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:17.026 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:17.045 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:17.045 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:27.051 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:27.052 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:27.053 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:27.071 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:27.071 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:27.072 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:27.072 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:27.076 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:27.076 +08:00 [INF] Request finished in 4.4577ms 200 application/json
2024-01-23 11:25:27.076 +08:00 [INF] Received HTTP response after 4.8114ms - "OK"
2024-01-23 11:25:27.076 +08:00 [INF] End processing HTTP request after 4.9829ms - "OK"
2024-01-23 11:25:27.079 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:27.090 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:27.093 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:27.103 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:27.110 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:27.110 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:27.134 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:27.134 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:37.140 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:37.141 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:37.142 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:37.160 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:37.160 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:37.164 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:37.164 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:37.169 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:37.169 +08:00 [INF] Request finished in 5.1122ms 200 application/json
2024-01-23 11:25:37.169 +08:00 [INF] Received HTTP response after 9.2135ms - "OK"
2024-01-23 11:25:37.169 +08:00 [INF] End processing HTTP request after 9.4039ms - "OK"
2024-01-23 11:25:37.173 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:37.184 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:37.187 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:37.198 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:37.207 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:37.207 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:37.228 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:37.228 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:47.232 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:47.233 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:47.234 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:47.251 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:47.251 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:47.252 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:47.252 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:47.257 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:47.257 +08:00 [INF] Request finished in 5.3281ms 200 application/json
2024-01-23 11:25:47.257 +08:00 [INF] Received HTTP response after 5.8131ms - "OK"
2024-01-23 11:25:47.257 +08:00 [INF] End processing HTTP request after 6.0383ms - "OK"
2024-01-23 11:25:47.260 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:47.271 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:47.274 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:47.286 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:47.295 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:47.296 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:47.316 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:47.316 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:25:57.318 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:25:57.318 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:25:57.320 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:25:57.332 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:57.332 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:25:57.332 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:25:57.332 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:25:57.339 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:25:57.339 +08:00 [INF] Request finished in 6.9006ms 200 application/json
2024-01-23 11:25:57.339 +08:00 [INF] Received HTTP response after 7.2442ms - "OK"
2024-01-23 11:25:57.339 +08:00 [INF] End processing HTTP request after 7.4353ms - "OK"
2024-01-23 11:25:57.342 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:57.354 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:25:57.357 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:25:57.369 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:25:57.376 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:57.377 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:25:57.397 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:25:57.397 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-23 11:26:07.401 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-23 11:26:07.401 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-23 11:26:07.403 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-23 11:26:07.416 +08:00 [INF] Start processing HTTP request GET "https://localhost:5001/health"
2024-01-23 11:26:07.416 +08:00 [INF] Sending HTTP request GET "https://localhost:5001/health"
2024-01-23 11:26:07.416 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/health  
2024-01-23 11:26:07.416 +08:00 [INF] Executing endpoint 'Health checks'
2024-01-23 11:26:07.420 +08:00 [INF] Executed endpoint 'Health checks'
2024-01-23 11:26:07.420 +08:00 [INF] Request finished in 4.4231ms 200 application/json
2024-01-23 11:26:07.420 +08:00 [INF] Received HTTP response after 4.7938ms - "OK"
2024-01-23 11:26:07.420 +08:00 [INF] End processing HTTP request after 4.9874ms - "OK"
2024-01-23 11:26:07.423 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:26:07.435 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-23 11:26:07.438 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-23 11:26:07.449 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-23 11:26:07.458 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:26:07.459 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-23 11:26:07.481 +08:00 [DBG] HealthReportCollector has completed.
2024-01-23 11:26:07.481 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
