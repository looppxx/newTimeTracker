2023-03-28 10:49:57.009 +08:00 [INF] Starting web host
2023-03-28 10:50:06.157 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-28 10:50:06.369 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:06.556 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:06.793 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:50:06.837 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:06.838 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:07.853 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-28 10:50:07.853 +08:00 [INF] Hosting environment: Development
2023-03-28 10:50:07.854 +08:00 [INF] Content root path: C:\Users\Admin\source\repos\aspnetcore-workshop-master\aspnetcore-workshop-master\src\TimeTracker
2023-03-28 10:50:07.927 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:50:07.927 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger  
2023-03-28 10:50:08.188 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:50:08.303 +08:00 [INF] Request finished in 375.8495ms 302 
2023-03-28 10:50:08.315 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:50:08.322 +08:00 [INF] Request finished in 398.9568ms 200 application/json
2023-03-28 10:50:08.341 +08:00 [INF] Received HTTP response after 1497.4857ms - "OK"
2023-03-28 10:50:08.342 +08:00 [INF] End processing HTTP request after 1513.9428ms - "OK"
2023-03-28 10:50:08.378 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/index.html  
2023-03-28 10:50:08.662 +08:00 [INF] Request finished in 283.3559ms 200 text/html; charset=utf-8
2023-03-28 10:50:08.688 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui.css  
2023-03-28 10:50:08.752 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js  
2023-03-28 10:50:08.752 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js  
2023-03-28 10:50:08.804 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-28 10:50:08.804 +08:00 [INF] Request finished in 116.384ms 200 text/css
2023-03-28 10:50:08.805 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-28 10:50:08.805 +08:00 [INF] Request finished in 53.5679ms 200 application/javascript
2023-03-28 10:50:08.830 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-28 10:50:08.830 +08:00 [INF] Request finished in 78.105ms 200 application/javascript
2023-03-28 10:50:08.997 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:09.054 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:50:09.065 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:09.091 +08:00 [DBG] Creating a new HealthReport history.
2023-03-28 10:50:09.206 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/v2/swagger.json  
2023-03-28 10:50:09.212 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:50:09.221 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:50:09.221 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:50:09.223 +08:00 [INF] Request finished in 2.1222ms 404 
2023-03-28 10:50:09.223 +08:00 [INF] Request finished in 2.1138ms 404 
2023-03-28 10:50:09.229 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:50:09.264 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/favicon-32x32.png  
2023-03-28 10:50:09.265 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-28 10:50:09.266 +08:00 [INF] Request finished in 1.8858ms 200 image/png
2023-03-28 10:50:09.330 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:50:09.332 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:50:10.658 +08:00 [INF] Request finished in 1451.8339ms 200 application/json; charset=utf-8
2023-03-28 10:50:19.337 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:19.377 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:19.380 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:50:19.397 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:19.397 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:19.401 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:50:19.403 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:50:19.413 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:50:19.413 +08:00 [INF] Request finished in 12.0562ms 200 application/json
2023-03-28 10:50:19.413 +08:00 [INF] Received HTTP response after 15.8941ms - "OK"
2023-03-28 10:50:19.414 +08:00 [INF] End processing HTTP request after 16.6328ms - "OK"
2023-03-28 10:50:19.420 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:19.460 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:50:19.466 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:19.484 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:50:19.504 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:19.508 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:19.533 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:50:19.533 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:50:29.544 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:29.550 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:29.553 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:50:29.589 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:29.590 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:29.593 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:50:29.594 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:50:29.603 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:50:29.604 +08:00 [INF] Request finished in 10.7402ms 200 application/json
2023-03-28 10:50:29.604 +08:00 [INF] Received HTTP response after 13.9192ms - "OK"
2023-03-28 10:50:29.604 +08:00 [INF] End processing HTTP request after 14.803ms - "OK"
2023-03-28 10:50:29.609 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:29.627 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:50:29.631 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:29.647 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:50:29.656 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:29.657 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:29.683 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:50:29.683 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:50:39.693 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:39.696 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:39.700 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:50:39.722 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:39.723 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:39.727 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:50:39.728 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:50:39.744 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:50:39.745 +08:00 [INF] Received HTTP response after 22.321ms - "OK"
2023-03-28 10:50:39.745 +08:00 [INF] End processing HTTP request after 23.6267ms - "OK"
2023-03-28 10:50:39.749 +08:00 [INF] Request finished in 21.7101ms 200 application/json
2023-03-28 10:50:39.760 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:39.782 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:50:39.789 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:39.805 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:50:39.817 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:39.818 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:39.844 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:50:39.844 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:50:49.854 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:49.856 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:49.859 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:50:49.877 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:49.877 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:50:49.880 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:50:49.880 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:50:49.889 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:50:49.889 +08:00 [INF] Request finished in 9.6314ms 200 application/json
2023-03-28 10:50:49.889 +08:00 [INF] Received HTTP response after 12.4186ms - "OK"
2023-03-28 10:50:49.890 +08:00 [INF] End processing HTTP request after 12.8977ms - "OK"
2023-03-28 10:50:49.895 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:49.911 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:50:49.915 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:50:49.931 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:50:49.941 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:49.942 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:50:49.968 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:50:49.968 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:50:59.974 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:50:59.976 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:50:59.979 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:00.065 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:00.066 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:00.087 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:00.088 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:00.109 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:00.110 +08:00 [INF] Received HTTP response after 43.9095ms - "OK"
2023-03-28 10:51:00.110 +08:00 [INF] End processing HTTP request after 44.6279ms - "OK"
2023-03-28 10:51:00.113 +08:00 [INF] Request finished in 26.4715ms 200 application/json
2023-03-28 10:51:00.123 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:00.146 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:00.152 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:00.176 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:00.190 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:00.192 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:00.225 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:00.225 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:51:10.227 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:51:10.228 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:51:10.230 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:10.251 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:10.252 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:10.254 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:10.255 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:10.263 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:10.263 +08:00 [INF] Request finished in 8.7917ms 200 application/json
2023-03-28 10:51:10.263 +08:00 [INF] Received HTTP response after 11.7196ms - "OK"
2023-03-28 10:51:10.263 +08:00 [INF] End processing HTTP request after 12.0679ms - "OK"
2023-03-28 10:51:10.267 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:10.283 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:10.287 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:10.303 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:10.312 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:10.313 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:10.338 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:10.338 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:51:20.350 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:51:20.351 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:51:20.354 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:20.374 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:20.374 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:20.377 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:20.378 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:20.388 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:20.389 +08:00 [INF] Request finished in 11.883ms 200 application/json
2023-03-28 10:51:20.389 +08:00 [INF] Received HTTP response after 14.9904ms - "OK"
2023-03-28 10:51:20.389 +08:00 [INF] End processing HTTP request after 15.4681ms - "OK"
2023-03-28 10:51:20.395 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:20.413 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:20.418 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:20.436 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:20.447 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:20.448 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:20.473 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:20.473 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:51:30.473 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:51:30.475 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:51:30.477 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:30.500 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:30.501 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:30.505 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:30.505 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:30.522 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:30.523 +08:00 [INF] Request finished in 18.4386ms 200 application/json
2023-03-28 10:51:30.523 +08:00 [INF] Received HTTP response after 22.5347ms - "OK"
2023-03-28 10:51:30.523 +08:00 [INF] End processing HTTP request after 23.1409ms - "OK"
2023-03-28 10:51:30.531 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:30.551 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:30.557 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:30.576 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:30.587 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:30.588 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:30.613 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:30.613 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:51:38.089 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/index.html  
2023-03-28 10:51:38.091 +08:00 [INF] Request finished in 2.042ms 200 text/html; charset=utf-8
2023-03-28 10:51:38.109 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui.css  
2023-03-28 10:51:38.117 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-28 10:51:38.118 +08:00 [INF] Request finished in 8.8034ms 200 text/css
2023-03-28 10:51:38.359 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:51:38.361 +08:00 [INF] Request finished in 1.6348ms 404 
2023-03-28 10:51:38.401 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:51:38.403 +08:00 [INF] Request finished in 1.3743ms 404 
2023-03-28 10:51:38.444 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/v2/swagger.json  
2023-03-28 10:51:38.446 +08:00 [INF] Request finished in 1.9935ms 200 application/json; charset=utf-8
2023-03-28 10:51:38.486 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/favicon-32x32.png  
2023-03-28 10:51:38.493 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-28 10:51:38.493 +08:00 [INF] Request finished in 6.7686ms 200 image/png
2023-03-28 10:51:40.619 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:51:40.620 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:51:40.622 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:40.637 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:40.637 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:40.640 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:40.641 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:40.650 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:40.651 +08:00 [INF] Request finished in 10.4711ms 200 application/json
2023-03-28 10:51:40.651 +08:00 [INF] Received HTTP response after 13.2801ms - "OK"
2023-03-28 10:51:40.651 +08:00 [INF] End processing HTTP request after 13.7168ms - "OK"
2023-03-28 10:51:40.656 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:40.675 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:40.679 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:40.697 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:40.707 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:40.708 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:40.730 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:40.730 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:51:50.739 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:51:50.741 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:51:50.743 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:51:50.763 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:50.763 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:51:50.766 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:51:50.766 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:51:50.780 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:51:50.781 +08:00 [INF] Request finished in 15.0586ms 200 application/json
2023-03-28 10:51:50.781 +08:00 [INF] Received HTTP response after 18.2519ms - "OK"
2023-03-28 10:51:50.781 +08:00 [INF] End processing HTTP request after 18.6938ms - "OK"
2023-03-28 10:51:50.788 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:50.807 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:51:50.811 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:51:50.825 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:51:50.834 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:50.834 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:51:50.859 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:51:50.859 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:00.870 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:00.871 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:00.872 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:00.888 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:00.888 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:00.891 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:00.891 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:00.901 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:00.901 +08:00 [INF] Received HTTP response after 13.0343ms - "OK"
2023-03-28 10:52:00.901 +08:00 [INF] Request finished in 10.5826ms 200 application/json
2023-03-28 10:52:00.901 +08:00 [INF] End processing HTTP request after 13.3824ms - "OK"
2023-03-28 10:52:00.908 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:00.923 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:00.927 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:00.943 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:00.950 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:00.951 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:00.974 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:00.974 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:10.978 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:10.979 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:10.981 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:11.000 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:11.000 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:11.008 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:11.008 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:11.016 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:11.016 +08:00 [INF] Request finished in 8.324ms 200 application/json
2023-03-28 10:52:11.016 +08:00 [INF] Received HTTP response after 15.6538ms - "OK"
2023-03-28 10:52:11.016 +08:00 [INF] End processing HTTP request after 15.9328ms - "OK"
2023-03-28 10:52:11.020 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:11.034 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:11.037 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:11.052 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:11.059 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:11.059 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:11.084 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:11.084 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:21.085 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:21.086 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:21.088 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:21.107 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:21.107 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:21.110 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:21.110 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:21.122 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:21.122 +08:00 [INF] Request finished in 12.5996ms 200 application/json
2023-03-28 10:52:21.122 +08:00 [INF] Received HTTP response after 15.4953ms - "OK"
2023-03-28 10:52:21.123 +08:00 [INF] End processing HTTP request after 15.9472ms - "OK"
2023-03-28 10:52:21.129 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:21.147 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:21.152 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:21.170 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:21.181 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:21.182 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:21.204 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:21.204 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:31.207 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:31.208 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:31.209 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:31.252 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:31.252 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:31.255 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:31.255 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:31.266 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:31.266 +08:00 [INF] Received HTTP response after 14.0975ms - "OK"
2023-03-28 10:52:31.266 +08:00 [INF] Request finished in 11.7137ms 200 application/json
2023-03-28 10:52:31.266 +08:00 [INF] End processing HTTP request after 14.4489ms - "OK"
2023-03-28 10:52:31.272 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:31.299 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:31.303 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:31.318 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:31.326 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:31.326 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:31.349 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:31.349 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:41.355 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:41.357 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:41.358 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:41.381 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:41.381 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:41.383 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:41.384 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:41.393 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:41.393 +08:00 [INF] Received HTTP response after 12.6424ms - "OK"
2023-03-28 10:52:41.394 +08:00 [INF] Request finished in 10.3037ms 200 application/json
2023-03-28 10:52:41.394 +08:00 [INF] End processing HTTP request after 12.9778ms - "OK"
2023-03-28 10:52:41.399 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:41.414 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:41.417 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:41.432 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:41.440 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:41.441 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:41.463 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:41.463 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:51.475 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:52:51.476 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:52:51.478 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:52:51.509 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:51.510 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:52:51.513 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:52:51.514 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:52:51.528 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:52:51.528 +08:00 [INF] Request finished in 15.0619ms 200 application/json
2023-03-28 10:52:51.528 +08:00 [INF] Received HTTP response after 18.6984ms - "OK"
2023-03-28 10:52:51.529 +08:00 [INF] End processing HTTP request after 19.3663ms - "OK"
2023-03-28 10:52:51.535 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:51.556 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:52:51.566 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:52:51.593 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:52:51.602 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:51.603 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:52:51.626 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:52:51.626 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:52:55.109 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/index.html  
2023-03-28 10:52:55.111 +08:00 [INF] Request finished in 1.992ms 200 text/html; charset=utf-8
2023-03-28 10:52:55.128 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui.css  
2023-03-28 10:52:55.133 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-28 10:52:55.134 +08:00 [INF] Request finished in 5.4188ms 200 text/css
2023-03-28 10:52:55.187 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:52:55.188 +08:00 [INF] Request finished in 0.767ms 404 
2023-03-28 10:52:55.197 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:52:55.198 +08:00 [INF] Request finished in 0.9724ms 404 
2023-03-28 10:52:55.225 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/v2/swagger.json  
2023-03-28 10:52:55.227 +08:00 [INF] Request finished in 1.6708ms 200 application/json; charset=utf-8
2023-03-28 10:52:55.237 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/favicon-32x32.png  
2023-03-28 10:52:55.239 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-28 10:52:55.239 +08:00 [INF] Request finished in 2.0463ms 200 image/png
2023-03-28 10:53:09.693 +08:00 [INF] Starting web host
2023-03-28 10:53:13.143 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-28 10:53:13.238 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:53:13.290 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:53:13.440 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:53:13.484 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:13.485 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:13.974 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-28 10:53:13.974 +08:00 [INF] Hosting environment: Development
2023-03-28 10:53:13.975 +08:00 [INF] Content root path: C:\Users\Admin\source\repos\aspnetcore-workshop-master\aspnetcore-workshop-master\src\TimeTracker
2023-03-28 10:53:14.026 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:53:14.026 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger  
2023-03-28 10:53:14.182 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:53:14.212 +08:00 [INF] Request finished in 188.1019ms 302 
2023-03-28 10:53:14.234 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/index.html  
2023-03-28 10:53:14.260 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:53:14.264 +08:00 [INF] Request finished in 242.1805ms 200 application/json
2023-03-28 10:53:14.295 +08:00 [INF] Received HTTP response after 806.223ms - "OK"
2023-03-28 10:53:14.296 +08:00 [INF] End processing HTTP request after 818.7363ms - "OK"
2023-03-28 10:53:14.375 +08:00 [INF] Request finished in 140.375ms 200 text/html; charset=utf-8
2023-03-28 10:53:14.393 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui.css  
2023-03-28 10:53:14.417 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js  
2023-03-28 10:53:14.417 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js  
2023-03-28 10:53:14.476 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-28 10:53:14.476 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-28 10:53:14.477 +08:00 [INF] Request finished in 59.9746ms 200 application/javascript
2023-03-28 10:53:14.477 +08:00 [INF] Request finished in 83.4109ms 200 text/css
2023-03-28 10:53:14.480 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-28 10:53:14.481 +08:00 [INF] Request finished in 63.9929ms 200 application/javascript
2023-03-28 10:53:14.710 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:14.763 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:53:14.770 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:14.791 +08:00 [DBG] Creating a new HealthReport history.
2023-03-28 10:53:14.908 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:53:14.928 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?', @p7='?', @p8='?', @p9='?' (Size = 6), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:53:14.963 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:53:14.964 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:53:15.537 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:53:15.539 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:53:15.544 +08:00 [INF] Request finished in 7.5934ms 404 
2023-03-28 10:53:15.546 +08:00 [INF] Request finished in 9.1453ms 404 
2023-03-28 10:53:15.561 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/v2/swagger.json  
2023-03-28 10:53:16.587 +08:00 [INF] Request finished in 1025.6668ms 200 application/json; charset=utf-8
2023-03-28 10:53:24.973 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:53:25.004 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:53:25.007 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:53:25.023 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:25.023 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:25.027 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:53:25.027 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:53:25.034 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:53:25.035 +08:00 [INF] Request finished in 8.6884ms 200 application/json
2023-03-28 10:53:25.035 +08:00 [INF] Received HTTP response after 11.4778ms - "OK"
2023-03-28 10:53:25.035 +08:00 [INF] End processing HTTP request after 11.9314ms - "OK"
2023-03-28 10:53:25.039 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:25.060 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:53:25.063 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:25.076 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:53:25.089 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:25.091 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:25.114 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:53:25.114 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:53:35.118 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:53:35.122 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:53:35.124 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:53:35.138 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:35.138 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:35.141 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:53:35.142 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:53:35.150 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:53:35.151 +08:00 [INF] Request finished in 9.6735ms 200 application/json
2023-03-28 10:53:35.151 +08:00 [INF] Received HTTP response after 12.6881ms - "OK"
2023-03-28 10:53:35.151 +08:00 [INF] End processing HTTP request after 13.0511ms - "OK"
2023-03-28 10:53:35.156 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:35.170 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:53:35.174 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:35.188 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:53:35.196 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:35.196 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:35.298 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:53:35.298 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:53:38.161 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:44383/api/v2/clients application/json 14
2023-03-28 10:53:38.195 +08:00 [INF] Authorization failed.
2023-03-28 10:53:38.202 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:53:38.203 +08:00 [INF] Request finished in 42.4988ms 401 
2023-03-28 10:53:45.309 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:53:45.312 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:53:45.315 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:53:45.332 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:45.332 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:45.335 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:53:45.336 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:53:45.344 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:53:45.345 +08:00 [INF] Request finished in 9.8403ms 200 application/json
2023-03-28 10:53:45.345 +08:00 [INF] Received HTTP response after 13.136ms - "OK"
2023-03-28 10:53:45.345 +08:00 [INF] End processing HTTP request after 13.657ms - "OK"
2023-03-28 10:53:45.350 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:45.365 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:53:45.368 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:45.382 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:53:45.390 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:45.390 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:45.411 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:53:45.411 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:53:54.655 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:44383/api/v2/clients application/json 14
2023-03-28 10:53:54.682 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:53:54.683 +08:00 [INF] Authorization failed.
2023-03-28 10:53:54.686 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:53:54.686 +08:00 [INF] Request finished in 32.1765ms 401 
2023-03-28 10:53:55.415 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:53:55.417 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:53:55.419 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:53:55.441 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:55.441 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:53:55.444 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:53:55.445 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:53:55.455 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:53:55.456 +08:00 [INF] Request finished in 12.0762ms 200 application/json
2023-03-28 10:53:55.456 +08:00 [INF] Received HTTP response after 14.7366ms - "OK"
2023-03-28 10:53:55.456 +08:00 [INF] End processing HTTP request after 15.5813ms - "OK"
2023-03-28 10:53:55.461 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:55.477 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:53:55.481 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:53:55.497 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:53:55.505 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:55.507 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:53:55.527 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:53:55.527 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:53:59.379 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:44383/api/v2/clients application/json 14
2023-03-28 10:53:59.381 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:53:59.383 +08:00 [INF] Authorization failed.
2023-03-28 10:53:59.383 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:53:59.384 +08:00 [INF] Request finished in 5.4857ms 401 
2023-03-28 10:54:02.787 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/index.html  
2023-03-28 10:54:02.793 +08:00 [INF] Request finished in 5.4426ms 200 text/html; charset=utf-8
2023-03-28 10:54:02.986 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:54:02.990 +08:00 [INF] Request finished in 4.545ms 404 
2023-03-28 10:54:03.037 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:54:03.039 +08:00 [INF] Request finished in 1.5154ms 404 
2023-03-28 10:54:03.066 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/v2/swagger.json  
2023-03-28 10:54:03.067 +08:00 [INF] Request finished in 1.0735ms 200 application/json; charset=utf-8
2023-03-28 10:54:03.075 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/swagger/favicon-32x32.png  
2023-03-28 10:54:03.076 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-28 10:54:03.077 +08:00 [INF] Request finished in 2.2182ms 200 image/png
2023-03-28 10:54:05.538 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:05.540 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:05.543 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:05.565 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:05.565 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:05.568 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:05.568 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:05.578 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:05.579 +08:00 [INF] Request finished in 11.0392ms 200 application/json
2023-03-28 10:54:05.579 +08:00 [INF] Received HTTP response after 13.9447ms - "OK"
2023-03-28 10:54:05.579 +08:00 [INF] End processing HTTP request after 14.6785ms - "OK"
2023-03-28 10:54:05.585 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:05.602 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:05.605 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:05.619 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:05.627 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:05.628 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:05.650 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:05.650 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:54:15.661 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:15.663 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:15.666 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:15.692 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:15.692 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:15.694 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:15.694 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:15.702 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:15.703 +08:00 [INF] Received HTTP response after 11.2776ms - "OK"
2023-03-28 10:54:15.703 +08:00 [INF] Request finished in 9.1576ms 200 application/json
2023-03-28 10:54:15.703 +08:00 [INF] End processing HTTP request after 11.6619ms - "OK"
2023-03-28 10:54:15.712 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:15.726 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:15.729 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:15.743 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:15.751 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:15.751 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:15.771 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:15.771 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:54:19.890 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:44383/api/v2/projects application/json 27
2023-03-28 10:54:19.891 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:54:19.891 +08:00 [INF] Authorization failed.
2023-03-28 10:54:19.892 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:54:19.892 +08:00 [INF] Request finished in 2.8123ms 401 
2023-03-28 10:54:25.772 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:25.773 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:25.776 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:25.809 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:25.809 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:25.812 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:25.813 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:25.822 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:25.822 +08:00 [INF] Received HTTP response after 13.0581ms - "OK"
2023-03-28 10:54:25.822 +08:00 [INF] Request finished in 10.4044ms 200 application/json
2023-03-28 10:54:25.823 +08:00 [INF] End processing HTTP request after 13.4873ms - "OK"
2023-03-28 10:54:25.832 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:25.848 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:25.851 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:25.863 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:25.870 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:25.870 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:25.889 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:25.889 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:54:35.898 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:35.899 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:35.901 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:35.923 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:35.923 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:35.927 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:35.927 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:35.940 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:35.941 +08:00 [INF] Request finished in 14.6513ms 200 application/json
2023-03-28 10:54:35.941 +08:00 [INF] Received HTTP response after 17.6394ms - "OK"
2023-03-28 10:54:35.941 +08:00 [INF] End processing HTTP request after 18.2691ms - "OK"
2023-03-28 10:54:35.950 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:35.968 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:35.974 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:35.994 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:36.008 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:36.011 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:36.039 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:36.039 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:54:46.040 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:46.042 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:46.044 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:46.069 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:46.069 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:46.075 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:46.076 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:46.095 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:46.096 +08:00 [INF] Request finished in 20.1004ms 200 application/json
2023-03-28 10:54:46.096 +08:00 [INF] Received HTTP response after 27.0564ms - "OK"
2023-03-28 10:54:46.096 +08:00 [INF] End processing HTTP request after 27.5747ms - "OK"
2023-03-28 10:54:46.102 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:46.123 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:46.128 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:46.145 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:46.156 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:46.157 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:46.180 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:46.181 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:54:52.969 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/get-token?admin=true  
2023-03-28 10:54:52.970 +08:00 [INF] Executing endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2023-03-28 10:54:53.034 +08:00 [INF] Route matched with {action = "GenerateToken", controller = "DummyAuth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GenerateToken(System.String, Boolean) on controller TimeTracker.Controllers.DummyAuthController (TimeTracker).
2023-03-28 10:54:53.171 +08:00 [INF] Executing ObjectResult, writing value of type 'System.String'.
2023-03-28 10:54:53.185 +08:00 [INF] Executed action TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker) in 142.0831ms
2023-03-28 10:54:53.185 +08:00 [INF] Executed endpoint 'TimeTracker.Controllers.DummyAuthController.GenerateToken (TimeTracker)'
2023-03-28 10:54:53.186 +08:00 [INF] Request finished in 216.9065ms 200 text/plain; charset=utf-8
2023-03-28 10:54:53.361 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/favicon.ico  
2023-03-28 10:54:53.363 +08:00 [INF] Request finished in 1.7939ms 404 
2023-03-28 10:54:56.191 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:54:56.192 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:54:56.194 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:54:56.215 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:56.215 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:54:56.218 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:54:56.218 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:54:56.231 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:54:56.231 +08:00 [INF] Request finished in 13.2969ms 200 application/json
2023-03-28 10:54:56.232 +08:00 [INF] Received HTTP response after 16.498ms - "OK"
2023-03-28 10:54:56.232 +08:00 [INF] End processing HTTP request after 17.0654ms - "OK"
2023-03-28 10:54:56.239 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:56.258 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:54:56.264 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:54:56.283 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:54:56.294 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:56.296 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:54:56.321 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:54:56.321 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:55:06.320 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:55:06.321 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:55:06.323 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:55:06.338 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:06.338 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:06.341 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:44383/health  
2023-03-28 10:55:06.341 +08:00 [INF] Executing endpoint 'Health checks'
2023-03-28 10:55:06.349 +08:00 [INF] Executed endpoint 'Health checks'
2023-03-28 10:55:06.350 +08:00 [INF] Request finished in 8.9551ms 200 application/json
2023-03-28 10:55:06.350 +08:00 [INF] Received HTTP response after 11.556ms - "OK"
2023-03-28 10:55:06.350 +08:00 [INF] End processing HTTP request after 11.9056ms - "OK"
2023-03-28 10:55:06.354 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:55:06.368 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:55:06.372 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:55:06.386 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:55:06.394 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:55:06.394 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:55:06.413 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:55:06.413 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:55:09.408 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:44383/api/v2/projects application/json 27
2023-03-28 10:55:09.409 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:55:09.409 +08:00 [INF] Authorization failed.
2023-03-28 10:55:09.410 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:55:09.411 +08:00 [INF] Request finished in 2.7849ms 401 
2023-03-28 10:55:34.977 +08:00 [INF] Starting web host
2023-03-28 10:55:39.090 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-28 10:55:39.189 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:55:39.242 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:55:39.379 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:55:39.409 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:39.410 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:40.043 +08:00 [INF] Now listening on: https://localhost:5001
2023-03-28 10:55:40.048 +08:00 [INF] Now listening on: http://localhost:5000
2023-03-28 10:55:40.048 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-28 10:55:40.049 +08:00 [INF] Hosting environment: Development
2023-03-28 10:55:40.049 +08:00 [INF] Content root path: C:\Users\Admin\source\repos\aspnetcore-workshop-master\aspnetcore-workshop-master\src\TimeTracker
2023-03-28 10:55:41.627 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:55:42.621 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger  
2023-03-28 10:55:42.751 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:55:42.848 +08:00 [INF] Request finished in 232.073ms 302 
2023-03-28 10:55:42.863 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:55:42.902 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:55:42.916 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/index.html  
2023-03-28 10:55:43.046 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:55:43.060 +08:00 [DBG] Creating a new HealthReport history.
2023-03-28 10:55:43.100 +08:00 [INF] Request finished in 184.2866ms 200 text/html; charset=utf-8
2023-03-28 10:55:43.124 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui.css  
2023-03-28 10:55:43.125 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:55:43.136 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-bundle.js  
2023-03-28 10:55:43.136 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-standalone-preset.js  
2023-03-28 10:55:43.150 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?' (Size = 75), @p7='?', @p8='?', @p9='?' (Size = 8), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:55:43.195 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:55:43.198 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:55:43.201 +08:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-28 10:55:43.207 +08:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-28 10:55:43.208 +08:00 [INF] Request finished in 83.8577ms 200 text/css
2023-03-28 10:55:43.208 +08:00 [INF] Request finished in 71.9402ms 200 application/javascript
2023-03-28 10:55:43.227 +08:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-28 10:55:43.228 +08:00 [INF] Request finished in 91.5323ms 200 application/javascript
2023-03-28 10:55:43.982 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:55:43.982 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:55:43.985 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v2/swagger.json  
2023-03-28 10:55:43.985 +08:00 [INF] Request finished in 3.9198ms 404 
2023-03-28 10:55:43.985 +08:00 [INF] Request finished in 3.9185ms 404 
2023-03-28 10:55:44.014 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/favicon-32x32.png  
2023-03-28 10:55:44.015 +08:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-28 10:55:44.015 +08:00 [INF] Request finished in 0.8474ms 200 image/png
2023-03-28 10:55:45.009 +08:00 [INF] Request finished in 1023.8511ms 200 application/json; charset=utf-8
2023-03-28 10:55:53.210 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:55:53.242 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:55:53.245 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:55:53.261 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:53.261 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:55:55.272 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:55:55.281 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:55:55.313 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:55:55.337 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:55:55.351 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:55:55.385 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:55:55.401 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:55:55.428 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:55:55.428 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:56:05.432 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:56:05.436 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:56:05.438 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:56:05.459 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:56:05.459 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:56:07.469 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:56:07.475 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:56:07.502 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:56:07.523 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:56:07.527 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:56:07.541 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:56:07.549 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:56:07.571 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:56:07.571 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:56:17.584 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:56:17.585 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:56:17.587 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:56:17.601 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:56:17.601 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:56:19.611 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:56:19.619 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:56:19.662 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:56:19.690 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:56:19.697 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:56:19.716 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:56:19.729 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:56:19.757 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:56:19.758 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:56:20.176 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v2/time-entries application/json 95
2023-03-28 10:56:20.212 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:56:20.229 +08:00 [INF] Authorization failed.
2023-03-28 10:56:20.242 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:56:20.244 +08:00 [INF] Request finished in 68.6404ms 401 
2023-03-28 10:56:29.758 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:56:29.759 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:56:29.761 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:56:29.781 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:56:29.781 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:57:55.726 +08:00 [INF] Starting web host
2023-03-28 10:57:59.607 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-03-28 10:57:59.682 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:57:59.727 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:57:59.863 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:57:59.893 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:57:59.894 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:00.430 +08:00 [INF] Now listening on: https://localhost:5001
2023-03-28 10:58:00.430 +08:00 [INF] Now listening on: http://localhost:5000
2023-03-28 10:58:00.431 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-28 10:58:00.431 +08:00 [INF] Hosting environment: Development
2023-03-28 10:58:00.431 +08:00 [INF] Content root path: C:\Users\Admin\source\repos\aspnetcore-workshop-master\aspnetcore-workshop-master\src\TimeTracker
2023-03-28 10:58:02.063 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:58:02.503 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:58:02.744 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:02.795 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:58:02.952 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger  
2023-03-28 10:58:02.961 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:58:02.984 +08:00 [DBG] Creating a new HealthReport history.
2023-03-28 10:58:03.111 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:03.142 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?' (Size = 75), @p7='?', @p8='?', @p9='?' (Size = 8), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:03.184 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:58:03.185 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:58:03.187 +08:00 [INF] Request finished in 239.2559ms 302 
2023-03-28 10:58:03.219 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/index.html  
2023-03-28 10:58:03.385 +08:00 [INF] Request finished in 166.1626ms 200 text/html; charset=utf-8
2023-03-28 10:58:04.372 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-bundle.js.map  
2023-03-28 10:58:04.373 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/swagger-ui-standalone-preset.js.map  
2023-03-28 10:58:04.381 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v2/swagger.json  
2023-03-28 10:58:04.422 +08:00 [INF] Request finished in 50.5866ms 404 
2023-03-28 10:58:04.426 +08:00 [INF] Request finished in 54.6109ms 404 
2023-03-28 10:58:05.599 +08:00 [INF] Request finished in 1219.7757ms 200 application/json; charset=utf-8
2023-03-28 10:58:07.816 +08:00 [INF] Request starting HTTP/1.1 GET https://localhost:5001/swagger/v1/swagger.json  
2023-03-28 10:58:07.952 +08:00 [INF] Request finished in 136.0373ms 200 application/json; charset=utf-8
2023-03-28 10:58:13.192 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:58:13.224 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:58:13.229 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:58:13.252 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:13.252 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:15.279 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:58:15.294 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:58:15.323 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:15.349 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:58:15.355 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:58:15.388 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:58:15.403 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:58:15.434 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:58:15.435 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:58:18.081 +08:00 [INF] Request starting HTTP/1.1 POST https://localhost:5001/api/v1/projects application/json 30
2023-03-28 10:58:18.112 +08:00 [INF] Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: jwt-token
2023-03-28 10:58:18.123 +08:00 [INF] Authorization failed.
2023-03-28 10:58:18.130 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-28 10:58:18.131 +08:00 [INF] Request finished in 50.467ms 401 
2023-03-28 10:58:25.443 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:58:25.451 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:58:25.456 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:58:25.477 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:25.478 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:27.487 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:58:27.492 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:58:27.528 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:27.556 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:58:27.562 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:58:27.579 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:58:27.589 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:58:27.623 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:58:27.623 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2023-03-28 10:58:37.632 +08:00 [DBG] Executing HealthCheck collector HostedService.
2023-03-28 10:58:37.633 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2023-03-28 10:58:37.635 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2023-03-28 10:58:37.654 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:37.654 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2023-03-28 10:58:39.663 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2023-03-28 10:58:39.670 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2023-03-28 10:58:39.709 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2023-03-28 10:58:39.735 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2023-03-28 10:58:39.739 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2023-03-28 10:58:39.755 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2023-03-28 10:58:39.765 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2023-03-28 10:58:39.790 +08:00 [DBG] HealthReportCollector has completed.
2023-03-28 10:58:39.790 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:52:41.211 +08:00 [INF] Starting web host
2024-01-22 09:52:45.488 +08:00 [INF] User profile is available. Using 'C:\Users\Admin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-01-22 09:52:45.616 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:52:45.710 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:52:45.812 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:52:45.837 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:52:45.838 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:52:46.519 +08:00 [INF] Now listening on: https://localhost:5001
2024-01-22 09:52:46.519 +08:00 [INF] Now listening on: http://localhost:5000
2024-01-22 09:52:46.519 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2024-01-22 09:52:46.520 +08:00 [INF] Hosting environment: Development
2024-01-22 09:52:46.520 +08:00 [INF] Content root path: C:\Users\Admin\Downloads\TimeTracker\src\TimeTracker
2024-01-22 09:52:48.020 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:52:48.231 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:52:48.268 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:52:48.296 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:52:48.343 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:52:48.355 +08:00 [DBG] Creating a new HealthReport history.
2024-01-22 09:52:48.396 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?' (Size = 14), @p3='?', @p4='?', @p5='?' (Size = 30)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Executions" ("DiscoveryService", "LastExecuted", "Name", "OnStateFrom", "Status", "Uri")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT "Id"
FROM "Executions"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:52:48.402 +08:00 [INF] Executing DbCommand [Parameters=[@p6='?' (Size = 75), @p7='?', @p8='?', @p9='?' (Size = 8), @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "HealthCheckExecutionEntries" ("Description", "Duration", "HealthCheckExecutionId", "Name", "Status")
VALUES (@p6, @p7, @p8, @p9, @p10);
SELECT "Id"
FROM "HealthCheckExecutionEntries"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:52:48.431 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:52:48.431 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:52:58.435 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:52:58.461 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:52:58.464 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:52:58.481 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:52:58.481 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:00.492 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:53:00.506 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:53:00.530 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:53:00.555 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:53:00.559 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:53:00.584 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:53:00.596 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:53:00.620 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:53:00.620 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:53:10.632 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:53:10.635 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:53:10.637 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:53:10.658 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:10.659 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:12.688 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:53:12.692 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:53:12.716 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:53:12.740 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:53:12.744 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:53:12.760 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:53:12.772 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:53:12.795 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:53:12.795 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:53:22.802 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:53:22.803 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:53:22.805 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:53:22.839 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:22.839 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:24.861 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:53:24.864 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:53:24.905 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:53:24.960 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:53:24.963 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:53:24.975 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:53:24.983 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:53:25.006 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:53:25.006 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:53:35.011 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:53:35.012 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:53:35.014 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:53:35.027 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:35.027 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:37.066 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:53:37.069 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:53:37.089 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:53:37.114 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:53:37.117 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:53:37.129 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:53:37.137 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:53:37.160 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:53:37.161 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:53:47.166 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:53:47.168 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:53:47.169 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:53:47.183 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:47.183 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:49.209 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:53:49.212 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:53:49.240 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:53:49.261 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:53:49.265 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:53:49.278 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:53:49.288 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:53:49.308 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:53:49.308 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:53:59.321 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:53:59.322 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:53:59.324 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:53:59.341 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:53:59.341 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:01.395 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:54:01.398 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:54:01.423 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:54:01.446 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:54:01.450 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:54:01.462 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:54:01.471 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:54:01.492 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:54:01.492 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:54:11.502 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:54:11.503 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:54:11.505 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:54:11.519 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:11.519 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:13.525 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:54:13.527 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:54:13.548 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:54:13.568 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:54:13.572 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:54:13.584 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:54:13.594 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:54:13.613 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:54:13.613 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:54:23.613 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:54:23.614 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:54:23.615 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:54:23.632 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:23.632 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:25.664 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:54:25.666 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:54:25.690 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:54:25.709 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:54:25.713 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:54:25.724 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:54:25.732 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:54:25.749 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:54:25.749 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:54:35.762 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:54:35.763 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:54:35.764 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:54:35.780 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:35.780 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:37.822 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:54:37.824 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:54:37.849 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:54:37.868 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:54:37.872 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:54:37.884 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:54:37.892 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:54:37.911 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:54:37.911 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:54:47.917 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:54:47.918 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:54:47.920 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:54:47.931 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:47.931 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:54:49.958 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:54:49.960 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:54:49.985 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:54:50.004 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:54:50.007 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:54:50.018 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:54:50.027 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:54:50.045 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:54:50.045 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:55:00.051 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:55:00.051 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:55:00.052 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:55:00.065 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:00.065 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:02.082 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:55:02.084 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:55:02.109 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:55:02.130 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:55:02.134 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:55:02.146 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:55:02.154 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:55:02.173 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:55:02.173 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:55:12.185 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:55:12.187 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:55:12.188 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:55:12.200 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:12.200 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:14.221 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:55:14.223 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:55:14.248 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:55:14.271 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:55:14.275 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:55:14.287 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:55:14.296 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:55:14.318 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:55:14.318 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:55:24.331 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:55:24.332 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:55:24.333 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:55:24.350 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:24.350 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:26.382 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:55:26.384 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:55:26.410 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:55:26.433 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:55:26.436 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:55:26.449 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:55:26.457 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:55:26.480 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:55:26.480 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:55:36.490 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:55:36.490 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:55:36.491 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:55:36.509 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:36.509 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:38.527 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:55:38.529 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:55:38.552 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:55:38.571 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:55:38.576 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:55:38.588 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:55:38.597 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:55:38.618 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:55:38.618 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:55:48.619 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:55:48.620 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:55:48.621 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:55:48.638 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:48.638 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:55:50.672 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:55:50.674 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:55:50.699 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:55:50.721 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:55:50.724 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:55:50.737 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:55:50.746 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:55:50.769 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:55:50.769 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
2024-01-22 09:56:00.771 +08:00 [DBG] Executing HealthCheck collector HostedService.
2024-01-22 09:56:00.772 +08:00 [INF] Entity Framework Core 3.0.0 initialized 'HealthChecksDb' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: None
2024-01-22 09:56:00.774 +08:00 [INF] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-01-22 09:56:00.787 +08:00 [INF] Start processing HTTP request GET "https://localhost:44383/health"
2024-01-22 09:56:00.787 +08:00 [INF] Sending HTTP request GET "https://localhost:44383/health"
2024-01-22 09:56:02.829 +08:00 [ERR] GetHealthReport threw an exception when trying to get report from https://localhost:44383/health configured with name HTTP-Api-Basic.
System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it.
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)
   at HealthChecks.UI.Core.HostedService.HealthCheckReportCollector.GetHealthReport(HealthCheckConfiguration configuration)
2024-01-22 09:56:02.830 +08:00 [INF] Executing DbCommand [Parameters=[@__p_1='?'], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE 0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-01-22 09:56:02.856 +08:00 [INF] Executing DbCommand [Parameters=[@p0='?' (Size = 14), @p1='?', @p2='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2);
SELECT "Id"
FROM "Failures"
WHERE changes() = 1 AND "Id" = last_insert_rowid();
2024-01-22 09:56:02.876 +08:00 [DBG] HealthReportCollector - health report execution history saved.
2024-01-22 09:56:02.879 +08:00 [INF] Executing DbCommand [Parameters=[@__configuration_Name_0='?' (Size = 14)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."HealthCheckExecutionId", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE ("e"."Name" = @__configuration_Name_0) AND @__configuration_Name_0 IS NOT NULL
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id", "h0"."Id"
2024-01-22 09:56:02.892 +08:00 [DBG] HealthReport history already exists and is in the same state, updating the values.
2024-01-22 09:56:02.900 +08:00 [INF] Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1;
SELECT changes();
2024-01-22 09:56:02.920 +08:00 [DBG] HealthReportCollector has completed.
2024-01-22 09:56:02.920 +08:00 [DBG] HealthCheck collector HostedService executed successfully.
